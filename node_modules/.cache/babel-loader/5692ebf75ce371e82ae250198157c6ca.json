{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/components/department-tree/department-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/components/department-tree/department-tree.vue","mtime":1640065471600},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96aGFuZy9jYW50ZWVuX21hbmFnZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IF8gZnJvbSAndW5kZXJzY29yZSc7CmltcG9ydCB7IGJ1aWxkQ2hpbGREZXBhcnRtZW50QXJyYXksIGJ1aWxkRGVwYXJ0bWVudFRyZWUsIGJ1aWxkVHJlZSB9IGZyb20gIkAvbGlicy91dGlsIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlRGF0YTogW10KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7fSwKICBjb21wdXRlZDogewogICAgZGVwYXJ0bWVudExpc3Q6IGZ1bmN0aW9uIGRlcGFydG1lbnRMaXN0KCkgewogICAgICB2YXIgZGVwYXJ0bWVudHMgPSB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLm1lcmNoYW50RGVwYXJ0bWVudExpc3Q7CgogICAgICBpZiAoZGVwYXJ0bWVudHMubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLmdldERlcGFydG1lbnRMaXN0KCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLm1lcmNoYW50RGVwYXJ0bWVudExpc3Q7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+iOt+WPlumDqOmXqOWIl+ihqAogICAgZ2V0RGVwYXJ0bWVudExpc3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXREZXBhcnRtZW50TGlzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcGFyYW1zOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgbWVyY2hhbnRfaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuY3VyTWVyY2hhbnRJZCwKICAgICAgICAgICAgICAgICAgbGV2ZWw6IDEKICAgICAgICAgICAgICAgIH07IC8vIGNvbnNvbGUubG9nKCJnZXREZXBhcnRtZW50TGlzdD09PT4+PiIgKyBKU09OLnN0cmluZ2lmeShwYXJhbXMpKQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRNZXJjaGFudERlcGFydG1lbnRMaXN0JywgcGFyYW1zKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldERlcGFydG1lbnRMaXN0KCkgewogICAgICAgIHJldHVybiBfZ2V0RGVwYXJ0bWVudExpc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldERlcGFydG1lbnRMaXN0OwogICAgfSgpLAogICAgLy8gLy/ojrflj5bpg6jpl6jliJfooagKICAgIC8vIHF1ZXJ5RGVwYXJ0bWVudDogYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgIGxldCBwYXJhbXMgPSB7CiAgICAvLyAgICAgb3JnX2lkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmN1ck9yZ0lkLAogICAgLy8gICAgIHNlc3Npb25pZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlci50b2tlbiwKICAgIC8vICAgICBsaW1pdDogMjAwMAogICAgLy8gICB9OwogICAgLy8gICByZXR1cm4gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2RlcGFydG1lbnRMaXN0JywgcGFyYW1zKTsKICAgIC8vIH0sCiAgICAvLwogICAgLy8gLy/ojrflj5bor6Xpo5/loILllYbmiLfkuIvmiYDmnInlrZDpg6jpl6jliJfooagKICAgIC8vIHF1ZXJ5Q2hpbGREZXBhcnRtZW50OiBhc3luYyBmdW5jdGlvbigpIHsKICAgIC8vICAgbGV0IHBhcmFtcyA9IHsKICAgIC8vICAgICBtZXJjaGFudF9pZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlci5jdXJNZXJjaGFudElkLAogICAgLy8gICB9OwogICAgLy8gICByZXR1cm4gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VzZXJDaGlsZERlcGFydG1lbnQnLCBwYXJhbXMpOwogICAgLy8gfSwKICAgIC8vICAgIC8v6I635Y+W5b2T5YmN6aOf5aCC5ZWG5oi355qE6YOo6Zeo5qCRCiAgICAvLyBnZXRNZXJjaGFudERlcGFydG1lbnQ6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICBsZXQgZGVwYXJ0VHJlZSA9IGJ1aWxkRGVwYXJ0bWVudFRyZWUodGhpcy4kc3RvcmUuc3RhdGUudXNlci51c2VyQ2hpbGREZXBhcnRtZW50TGlzdCx0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmVtcERlcGFydG1lbnRMaXN0KTsKICAgIC8vICAgdGhpcy4kc3RvcmUuY29tbWl0KCdVcGRhdGVEZXBhcnRtZW50TGlzdCcsIGRlcGFydFRyZWUpOwogICAgLy8gICBpZiAoZGVwYXJ0VHJlZS5sZW5ndGggPiAwKSB7CiAgICAvLyAgICAgdGhpcy50cmVlRGF0YSA9IGJ1aWxkVHJlZShkZXBhcnRUcmVlLCB7fSwgJ2RlcGFydG1lbnRfaWQnLCAncGFyZW50aWQnLCAnY2hpbGRyZW4nKTsKICAgIC8vICAgfQogICAgLy8gfSwKICAgIGNob2ljZVRyZWU6IGZ1bmN0aW9uIGNob2ljZVRyZWUoZGF0YSkgewogICAgICB2YXIgY2hvaWNlc0RhdGEgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZE5vZGVzKCk7IC8v5pa55rOV55qE6L+Q55SoIGdldFNlbGVjdGVkTm9kZXPkuZ/mmK/lpoLmraTnlKjms5UKCiAgICAgIHZhciBkZXBhcnRtZW50cyA9IF8ucGx1Y2soY2hvaWNlc0RhdGEsICdkZXBhcnRtZW50X2lkJyk7CgogICAgICB0aGlzLiRlbWl0KCdmb3JtRGVwYXJ0bWVudHMnLCBkZXBhcnRtZW50cyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgey8vIHRoaXMuZ2V0RGVwYXJ0bWVudExpc3QoKTsKICB9LAogIC8vIGNyZWF0ZWQoKXsKICAvLyAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7CiAgLy8gICAgIGxldCBzZWxmID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RyZWUnKTsKICAvLyAgICAgaWYoIXNlbGYuY29udGFpbnMoZS50YXJnZXQpKXsKICAvLyAgICAgICB0aGlzLnRyZWVEYXRhWzBdWydleHBhbmQnXSA9IGZhbHNlOwogIC8vICAgICB9CiAgLy8gICB9KQogIC8vIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICAvLyB0aGlzLnRyZWVEYXRhWzBdWydleHBhbmQnXSA9IGZhbHNlOwogICAgdGhpcy5kZXBhcnRtZW50TGlzdFswXVsnZXhwYW5kJ10gPSBmYWxzZTsKICB9Cn07"},{"version":3,"sources":["department-tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,OAAA,CAAA,MAAA,YAAA;AACA,SAAA,yBAAA,EAAA,mBAAA,EAAA,SAAA,QAAA,aAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GALA;AAOA,EAAA,UAAA,EAAA,EAPA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,WAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,sBAAA;;AACA,UAAA,WAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,iBAAA;AACA;;AAEA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,sBAAA;AACA;AARA,GATA;AAoBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,iBAAA;AAAA,uFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACA;AACA,kBAAA,WAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,aADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBADA,EAKA;;AALA;AAAA,uBAMA,KAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,MAAA,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,UA5CA,sBA4CA,IA5CA,EA4CA;AACA,UAAA,WAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,eAAA,EAAA,CADA,CACA;;AACA,UAAA,WAAA,GAAA,CAAA,CAAA,KAAA,CAAA,WAAA,EAAA,eAAA,CAAA;;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,WAAA;AACA;AAhDA,GApBA;AAwEA,EAAA,OAxEA,qBAwEA,CACA;AACA,GA1EA;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SApFA,uBAoFA;AACA;AACA,SAAA,cAAA,CAAA,CAAA,EAAA,QAAA,IAAA,KAAA;AACA;AAvFA,CAAA","sourcesContent":["<!-- 部门树 -->\n<template>\n  <div >\n    <!-- <Tree id=\"tree\" :data=\"treeData\" @on-check-change=\"choiceTree\" ref=\"tree\" show-checkbox multiple @click.stop=\"treeData[0]['expand']=true;\"></Tree>  -->\n    <Tree\n        id=\"tree\"\n        :data=\"departmentList\"\n        @on-check-change=\"choiceTree\"\n        ref=\"tree\"\n        show-checkbox\n        empty-text=\"暂无部门数据\"\n        multiple>\n    </Tree>\n  </div>\n</template>\n\n<script>\nimport _ from 'underscore';\nimport {buildChildDepartmentArray, buildDepartmentTree, buildTree} from \"@/libs/util\";\nexport default {\n  data () {\n    return {\n      treeData: []\n    };\n  },\n\n  components: {},\n\n  computed: {\n    departmentList(){\n      let departments = this.$store.state.user.merchantDepartmentList;\n      if (departments.length == 0){\n        this.getDepartmentList();\n      }\n\n      return this.$store.state.user.merchantDepartmentList;\n    }\n  },\n\n  methods: {\n    //获取部门列表\n    getDepartmentList: async function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        level: 1,\n      };\n      // console.log(\"getDepartmentList===>>>\" + JSON.stringify(params))\n      await this.$store.dispatch('getMerchantDepartmentList', params);\n\n      // await this.$store.dispatch('getMerchantDepartmentList', params).then(res=>{\n      //   if(res.return_code==0){\n      //     this.treeData = res.data;\n      //   }\n      // }).catch(err=>{\n      //\n      // });\n    },\n\n    // //获取部门列表\n    // queryDepartment: async function() {\n    //   let params = {\n    //     org_id: this.$store.state.user.curOrgId,\n    //     sessionid: this.$store.state.user.token,\n    //     limit: 2000\n    //   };\n    //   return await this.$store.dispatch('departmentList', params);\n    // },\n    //\n    // //获取该食堂商户下所有子部门列表\n    // queryChildDepartment: async function() {\n    //   let params = {\n    //     merchant_id: this.$store.state.user.curMerchantId,\n    //   };\n    //   return await this.$store.dispatch('userChildDepartment', params);\n    // },\n    //    //获取当前食堂商户的部门树\n    // getMerchantDepartment: async function() {\n    //   let departTree = buildDepartmentTree(this.$store.state.user.userChildDepartmentList,this.$store.state.user.empDepartmentList);\n    //   this.$store.commit('UpdateDepartmentList', departTree);\n    //   if (departTree.length > 0) {\n    //     this.treeData = buildTree(departTree, {}, 'department_id', 'parentid', 'children');\n    //   }\n    // },\n    choiceTree(data){\n      let choicesData=this.$refs.tree.getCheckedNodes(); //方法的运用 getSelectedNodes也是如此用法\n      let departments = _.pluck(choicesData, 'department_id');\n      this.$emit('formDepartments', departments);\n    },\n\n  },\n\n  mounted() {\n    // this.getDepartmentList();\n  },\n\n  // created(){\n  //   document.addEventListener('click', e => {\n  //     let self = document.getElementById('tree');\n  //     if(!self.contains(e.target)){\n  //       this.treeData[0]['expand'] = false;\n  //     }\n  //   })\n  // },\n  destroyed(){\n    // this.treeData[0]['expand'] = false;\n    this.departmentList[0]['expand'] = false;\n  }\n}\n\n</script>\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/components/department-tree"}]}