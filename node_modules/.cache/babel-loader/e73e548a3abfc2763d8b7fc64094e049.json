{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js!/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/工作/pic_ad/src/views/statistics/stat-home/components/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/views/statistics/stat-home/components/table.vue","mtime":1640246682244},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["table.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\n<template>\n\n  <div class=\"card\">\n    <div class=\"no-print\">\n      <Button class=\"pull-right margin-top-20\" type='primary' ghost icon=\"md-download\" @click=\"exportResultExcel\">导出EXCEL</Button>\n      <Button class=\"pull-right margin-right-10 margin-top-20\" type='success' ghost icon=\"md-stats\" :loading=\"loading2\" @click=\"exportResultPdf\">导出PDF</Button>\n      <Button class=\"pull-right margin-right-10 margin-top-20\" type='success' ghost icon=\"md-print\" @click=\"printContext\">打印</Button>\n      <!--      <Button class=\"pull-right margin-right-10\" type='success' ghost icon=\"md-print\"  v-print=\"printStat\">打印</Button>-->\n    </div>\n    <div ref=\"print\" id=\"statPrint\" class=\"padding-top-20\">\n      <div class=\"margin-bottom-10 clearfix\" style=\"color: #666;line-height:32px\">{{ statName }}\n        <span class=\"padding-left-15 padding-right-15\">{{ statDate }}：{{ start }} - {{ end }}</span>\n      </div>\n\n<!--      <Table border size=\"small\" :row-class-name=\"rowClassName\" v-if=\"statisticsResult.appointment\" :columns='statisticsResult.appointment.table_head' :data='statisticsResult.appointment.result' :loading=\"loading\">-->\n      <Table border size=\"small\" :row-class-name=\"rowClassName\" :columns='columns' :data='statisticsResult' :loading=\"loading\">\n        <template slot=\"counts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.count }}</span>\n        </template>\n        <template slot=\"amounts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.amount }}</span>\n        </template>\n      </Table>\n    </div>\n\n  </div>\n</template>\n<script>\nimport _ from 'underscore';\nimport excel from '@/libs/excel';\nimport * as dataConfig from '../dataConfig';\nimport {ExportSavePdf, previewImg, getTreeNodes, getTreeNodeItem} from \"@/libs/util\";\nimport moment from \"moment-timezone\";\nexport default {\n  name: 'SearchTable',\n  props: {\n    startDate: String,\n    endDate: String,\n    type: String,\n  },\n  data() {\n    return {\n      start: this.startDate,\n      end: this.endDate,\n      role: this.roleIds,\n      columns: [],\n      loading2: false,\n      statName: '',\n      statDate: '',\n    };\n  },\n\n  watch: {\n    'startDate' : function(val){\n      this.start = val;\n    },\n    'endDate' : function(val){\n      this.end = val;\n    },\n    'type' : function(val){\n      if (val == 'appointment'){\n        this.statName = '预约报表';\n        this.statDate = '预约时间';\n      }\n      if (val == 'order'){\n        this.statName = '就餐报表';\n        this.statDate = '就餐时间';\n      }\n    },\n    'roleIds' : function(val){\n      this.role = val;\n    }\n  },\n\n  components: {},\n\n  computed: {\n    reportStatistics() {\n      return this.$store.state.statistics.reportStatistics;\n    },\n    loading() {\n      return this.$store.state.app.tableLoading;\n    },\n    getMerchantDepartmentList() {\n      return this.$store.state.user.merchantDepartmentList;\n    },\n    statisticsResult() {\n      let statisticsResult = this.$store.state.statistics.statHome || {};\n      if (JSON.stringify(statisticsResult) == \"{}\") {\n        return [];\n      };\n\n      let data = {};\n      let tableData = [];\n      if (this.type == 'appointment'){\n        data = statisticsResult.appointment;\n      }\n      if (this.type == 'order'){\n        data = statisticsResult.order;\n      }\n      let headerCol = data.table_head_col;\n      let name = {\n        \"title\": \"餐种\",\n        \"key\": \"name\"\n      };\n\n      let headerRow = data.table_head_row;\n      let resultData = data.result;\n\n      headerRow.forEach(function (headerRowItem, headerRowIndex) {\n        let dataInfo = {\n          name: headerRowItem.title,\n        };\n        headerCol.forEach(function (headerColItem, headerColIndex) {\n          dataInfo[headerColItem.key] = resultData[0][headerColItem.key + '_' + headerRowItem.key];\n          // console.log(\"createTableData===dataInfo[\" + headerColItem.key + \"]>>>\" + JSON.stringify(dataInfo[headerColItem.key]));\n        });\n\n        tableData.push(dataInfo);\n\n      });\n\n      headerCol.unshift(name);\n\n      let lastDataIndex = _.findIndex(tableData, {name: '合计'});\n      let lastData = tableData.splice(lastDataIndex,1);\n      tableData.push(lastData[0]);\n\n      this.columns = headerCol;\n      return tableData;\n    },\n\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      // this.columns = dataConfig.columns;\n      // this.createTableData();\n    },\n\n    printContext () {\n      this.$print(this.$refs.print);\n      // 不打印方法1. 添加no-print样式类\n      // 不打印方法2. this.$print(this.$refs.print,{'no-print':'.do-not-print-div'})\n    },\n\n    rowClassName (row, index) {\n      let valueArr = _.values(row);\n      if (_.indexOf(valueArr,\"当日小计\") != -1){\n        return 'demo-table-info-row';\n      } else if (_.indexOf(valueArr,\"合计\") != -1) {\n        return 'demo-table-error-row';\n      }\n\n      return '';\n    },\n    // 导出PDF文件\n    exportResultPdf: function () {\n      this.loading2 = true;\n      let fileType = '就餐报表';\n      if (this.type == 'appointment'){\n        fileType = '预约报表';\n      }\n      if (this.type == 'order'){\n        fileType = '就餐报表';\n      }\n      let pdfName = fileType + '_' + this.startDate + '-' + this.endDate;\n      let nowTime= moment().format('YYYY-MM-DD');\n\n      ExportSavePdf(document.querySelector('#statPrint'), pdfName, nowTime, 'l');\n      this.loading2 = false;\n    },\n\n    // 导出EXCEL\n    exportExcel: function() {\n      try {\n        if (this.columns.length>0) {\n          let fileType = '就餐报表';\n          if (this.type == 'appointment'){\n            fileType = '预约报表';\n          }\n          if (this.type == 'order'){\n            fileType = '就餐报表';\n          }\n          let filename = fileType + '_' + this.startDate + '-' + this.endDate;\n          let key = [];\n          for(let item of this.columns){\n            let tmp = ''\n            tmp = item.key? item.key: item.slot;\n            if (tmp=='counts'){\n              tmp = 'count';\n            }\n            if (tmp=='amounts'){\n              tmp = 'amount';\n            }\n            key.push(tmp);\n          }\n          const params = {\n            title: _.pluck(this.columns, 'title'),\n            // key: _.pluck(this.columns, 'key'),\n            key: key,\n            data: this.statisticsResult,\n            autoWidth: true,\n            filename: filename,\n          };\n          excel.export_array_to_excel(params);\n        } else {\n          this.$Message.info('表格数据不能为空！');\n        }\n      } catch (e) {\n        console.log(e);\n        // this.$store.commit('STAT_DAY_SET_PROPERTY_BY_KEY', { key: 'exportLoading', value: false })\n      }\n    },\n\n    // 导出\n    exportResultExcel: function() {\n      try {\n        if (this.columns.length>0) {\n          let fileType = '就餐报表';\n          if (this.type == 'appointment'){\n            fileType = '预约报表';\n          }\n          if (this.type == 'order'){\n            fileType = '就餐报表';\n          }\n          let filename = fileType + '_' + this.startDate + '-' + this.endDate;\n          let key = [];\n          for(let item of this.columns){\n            let tmp = ''\n            tmp = item.key? item.key: item.slot;\n            if (tmp=='counts'){\n              tmp = 'count';\n            }\n            if (tmp=='amounts'){\n              tmp = 'amount';\n            }\n            key.push(tmp);\n          }\n\n          //设置主标题样式\n          let headerStyle = {\n            font: {\n              name: \"宋体\",\n              sz: 14,\n              color: { rgb: \"000000\" },\n              bold: true\n              // italic: false,\n              // underline: false\n            },\n            alignment: {\n              horizontal: \"center\",\n              vertical: \"center\"\n            },\n            fill: {\n              fgColor: {rgb: \"87CEFA\"},\n            },\n            // 单元格边框\n            border: {\n              top: {\n                style: 'thin'\n              },\n              bottom: {\n                style: 'thin'\n              },\n              left: {\n                style: 'thin'\n              },\n              right: {\n                style: 'thin'\n              }\n            }\n          };\n          //设置主标题样式\n          let bodyStyle = {\n            font: {\n              // name: \"宋体\",\n              // sz: 18,\n              color: { rgb: \"000000\" },\n              bold: true\n              // italic: false,\n              // underline: false\n            },\n            alignment: {\n              horizontal: \"center\",\n              vertical: \"center\"\n            },\n\n            // fill: {\n            //   fgColor: {rgb: \"008000\"},\n            // },\n\n            // 单元格边框\n            border: {\n              top: {\n                style: 'thin'\n              },\n              bottom: {\n                style: 'thin'\n              },\n              left: {\n                style: 'thin'\n              },\n              right: {\n                style: 'thin'\n              }\n            }\n          };\n          const params = {\n            // title: _.pluck(this.statisticsResult.table_head, 'title'),\n            title: _.pluck(this.columns, 'title'),\n            key: key,\n            data: this.statisticsResult,\n            autoWidth: true,\n            filename: filename,\n            headerStyle: headerStyle,\n            bodyStyle: bodyStyle,\n          };\n\n          excel.export_array_to_excel_style(params);\n        } else {\n          this.$Message.info('表格数据不能为空！');\n        }\n      } catch (e) {\n        console.log(e);\n        // this.$store.commit('STAT_DAY_SET_PROPERTY_BY_KEY', { key: 'exportLoading', value: false })\n      }\n    },\n\n    handleLoadData: async function (item, callback) {\n      // console.log(\"handleLoadData---item>>>\" + JSON.stringify(item));\n      let itemData = getTreeNodeItem(this.getMerchantDepartmentList,'department_id', 'children', item.key_100);\n      // console.log(\"handleLoadData---find itemData equals>>>\" + JSON.stringify(itemData));\n      let level = 0;\n      if (itemData.length > 0){\n        if (itemData[0].children.length > 0){\n          level = itemData[0].level + 1;\n        }\n      }\n\n      let departArray = getTreeNodes(itemData, 'department_id', 'children');\n      let arrayResult = departArray.join(',');\n      // console.log(\"handleLoadData---arrayResult>>>\" + arrayResult);\n\n      let data = await this.queryChildStat(item, arrayResult, level);\n      // console.log(\"handleLoadData---data>>>\" + JSON.stringify(data));\n      callback(data);\n    },\n\n    queryChildStat: async function(item, value, level) {\n      // console.log(\"queryChildStat---item>>>\" + JSON.stringify(item));\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        unit: this.formData.unit,\n        start: item.key_1,\n        end: item.key_1,\n        key: this.formData.key,\n        value: value,\n        level: level,\n        format: 1,\n\n      };\n      // console.log(\"queryChildStat---params>>>>\" + JSON.stringify(params));\n      let res = await this.$store.dispatch('statisticsSale', params);\n      // console.log(\"queryChildStat---res>>>>\" + JSON.stringify(res));\n      return res.result;\n\n    },\n\n  }\n}\n</script>\n<style lang='less' scoped>\n/deep/.ivu-table-border td,.ivu-table-border th{\n  border-color: #dcdee2;\n}\n/deep/.ivu-table-wrapper{\n  width: 100%;\n  // max-width: 1040px;\n  overflow-x: auto;\n}\n/deep/.ivu-table {\n  width: 100%;\n  border-bottom: 1px solid #dcdee2;\n  .ivu-table-cell {\n    padding-left: 5px;\n    padding-right: 10px;\n  }\n  .demo-table-info-row td{\n    background-color: #e8eaec;\n    font-weight: 700;\n  }\n  .demo-table-error-row td{\n    background-color: #27a163;\n    color: #fff;\n    font-weight: 700;\n  }\n\n}\n@media print {\n  #statPrint{\n    /deep/.ivu-table{\n      width: 100%;\n      // border-right:2px solid #dcdee2;\n    }\n    /deep/.ivu-table-small td {\n      height: 30px;\n      line-height: 1.2;\n      color: #333;\n      font-size: 12px;\n\n    }\n    /deep/.ivu-table-small th {\n      font-weight: 400;\n      font-size: 30px;\n\n    }\n\n  }\n}\n\n\n</style>\n"],"sourceRoot":"src/views/statistics/stat-home/components"}]}