{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js!/Users/zhang/工作/pic_ad/src/libs/excel.js","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/libs/excel.js","mtime":1638355006756},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhang/工作/pic_ad/src/libs/excel.js"],"names":["XLSX","XLSXS","FileSaver","auto_width","ws","data","colWidth","map","row","val","wch","toString","charCodeAt","length","result","i","j","json_to_array","key","jsonData","v","fixdata","o","l","w","byteLength","String","fromCharCode","apply","Uint8Array","slice","get_header_row","sheet","headers","range","utils","decode_range","C","R","s","r","c","e","cell","encode_cell","hdr","t","format_cell","push","get_sheet_header_row","s2ab","buf","ArrayBuffer","view","export_table_to_excel","id","filename","table","document","getElementById","wb","table_to_book","writeFile","export_json_to_excel","title","autoWidth","book_new","unshift","json_to_sheet","header","skipHeader","arr","book_append_sheet","export_array_to_excel","aoa_to_sheet","export_array_to_excel_style","headerStyle","bodyStyle","wbout","write","bookType","bookSST","type","saveAs","Blob","read","workbook","firstSheetName","SheetNames","worksheet","Sheets","results","sheet_to_json"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport XLSX from 'xlsx';\nimport XLSXS from 'xlsx-style';\nimport FileSaver from 'file-saver';\n\nfunction auto_width(ws, data) {\n  /*set worksheet max width per col*/\n  const colWidth = data.map((row) =>\n    row.map((val) => {\n      /*if null/undefined*/\n      if (val == null) {\n        return { wch: 10 };\n      } else if (val.toString().charCodeAt(0) > 255) {\n        /*if chinese*/\n        return { wch: val.toString().length * 2 };\n      } else {\n        return { wch: val.toString().length };\n      }\n    }),\n  );\n  /*start in the first row*/\n  let result = colWidth[0];\n  for (let i = 1; i < colWidth.length; i++) {\n    for (let j = 0; j < colWidth[i].length; j++) {\n      if (result[j]['wch'] < colWidth[i][j]['wch']) {\n        result[j]['wch'] = colWidth[i][j]['wch'];\n      }\n    }\n  }\n  ws['!cols'] = result;\n}\n\nfunction json_to_array(key, jsonData) {\n  return jsonData.map((v) =>\n    key.map((j) => {\n      return v[j];\n    }),\n  );\n}\n\n// fix data,return string\nfunction fixdata(data) {\n  let o = '';\n  let l = 0;\n  const w = 10240;\n  for (; l < data.byteLength / w; ++l)\n    o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\n  o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n  return o;\n}\n\n// get head from excel file,return array\nfunction get_header_row(sheet) {\n  const headers = [];\n  const range = XLSX.utils.decode_range(sheet['!ref']);\n  let C;\n  const R = range.s.r; /* start in the first row */\n  for (C = range.s.c; C <= range.e.c; ++C) {\n    /* walk every column in the range */\n    var cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]; /* find the cell in the first row */\n    var hdr = 'UNKNOWN ' + C; // <-- replace with your desired default\n    if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n    headers.push(hdr);\n  }\n  return headers;\n}\n\n// get header row from excel file,return array\nfunction get_sheet_header_row(sheet) {\n  const headers = [];\n  const range = XLSX.utils.decode_range(sheet['!ref']);\n  let C;\n  const R = range.s.r; /* start in the first row */\n  for (C = range.s.c; C <= range.e.c; ++C) {\n    let cell = XLSX.utils.encode_cell({ c: C, r: R }); /* find the cell in the first row */\n    headers.push(cell);\n  }\n  return headers;\n}\n\n/**\n * 工具方法\n */\nfunction s2ab(s) {\n  let buf = new ArrayBuffer(s.length)\n  let view = new Uint8Array(buf)\n  for (let i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\n  return buf\n}\n\nexport const export_table_to_excel = (id, filename) => {\n  const table = document.getElementById(id);\n  const wb = XLSX.utils.table_to_book(table);\n  XLSX.writeFile(wb, filename);\n\n  /* the second way */\n  // const table = document.getElementById(id);\n  // const wb = XLSX.utils.book_new();\n  // const ws = XLSX.utils.table_to_sheet(table);\n  // XLSX.utils.book_append_sheet(wb, ws, filename);\n  // XLSX.writeFile(wb, filename);\n};\n\nexport const export_json_to_excel = ({ data, key, title, filename, autoWidth }) => {\n  const wb = XLSX.utils.book_new();\n  data.unshift(title);\n  const ws = XLSX.utils.json_to_sheet(data, { header: key, skipHeader: true });\n  if (autoWidth) {\n    const arr = json_to_array(key, data);\n    auto_width(ws, arr);\n  }\n  XLSX.utils.book_append_sheet(wb, ws, filename.slice(0,31));\n  XLSX.writeFile(wb, filename + '.xlsx');\n};\n\nexport const export_array_to_excel = ({ key, data, title, filename, autoWidth }) => {\n  const wb = XLSX.utils.book_new();\n  const arr = json_to_array(key, data);\n  arr.unshift(title);\n  const ws = XLSX.utils.aoa_to_sheet(arr);\n  if (autoWidth) {\n    auto_width(ws, arr);\n  }\n  XLSX.utils.book_append_sheet(wb, ws, filename.slice(0,31));\n  XLSX.writeFile(wb, filename + '.xlsx');\n};\n\nexport const export_array_to_excel_style = ({ key, data, title, filename, autoWidth, headerStyle, bodyStyle }) => {\n  const wb = XLSX.utils.book_new();\n  const arr = json_to_array(key, data);\n  arr.unshift(title);\n  const ws = XLSX.utils.aoa_to_sheet(arr);\n  if (autoWidth) {\n    auto_width(ws, arr);\n  }\n  XLSX.utils.book_append_sheet(wb, ws, filename.slice(0,31));\n\n  // // 设置标题行单元格合并\n  // // s即start, e即end, r即row, c即column\n  // // 合并从--0行0列开始,到0行3列\n  // ws['!merges'] = [\n  //   { s: { r: 0, c: 0 }, e: { r: 0, c: 3 } }\n  // ]\n\n  /*\n    设置单元格其他样式\n   */\n  for (let i in ws) {\n    if (i == '!ref' || i == '!merges' || i == '!cols' || i == 'A1') {\n\n    } else {\n      ws[i].s = bodyStyle;\n    }\n  }\n\n  //excel标题样式\n  const header = get_sheet_header_row(ws);\n  for (let i in header) {\n    ws[header[i]].s = headerStyle;\n  }\n\n  // 导出Excel, 注意这里用到的是XLSXS对象\n  let wbout = XLSXS.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  })\n  FileSaver.saveAs(\n    new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }),\n    filename + '.xlsx'\n  )\n};\n\nexport const read = (data, type) => {\n  /* if type == 'base64' must fix data first */\n  // const fixedData = fixdata(data)\n  // const workbook = XLSX.read(btoa(fixedData), { type: 'base64' })\n  const workbook = XLSX.read(data, { type: type });\n  const firstSheetName = workbook.SheetNames[0];\n  const worksheet = workbook.Sheets[firstSheetName];\n  const header = get_header_row(worksheet);\n  const results = XLSX.utils.sheet_to_json(worksheet);\n  return { header, results };\n};\n\nexport default {\n  export_table_to_excel,\n  export_array_to_excel,\n  export_array_to_excel_style,\n  export_json_to_excel,\n  read,\n};\n"]}]}