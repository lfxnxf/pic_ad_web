{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/views/setting/role-setting/components/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/views/setting/role-setting/components/table.vue","mtime":1638516298157},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["table.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 人员类型列表 -->\n<template>\n  <div class=\"card\">\n    <Table border stripe :columns='columns' :data='roleList.result' :loading=\"loading\">\n      <template slot=\"is_enable\" slot-scope=\"{ row }\">\n        <Tag :color=\"row.is_enable==1?'green':'volcano'\">{{row.is_enable==1?'有效':'无效'}}</Tag>\n      </template>\n      <template slot=\"handle\" slot-scope=\"{ row }\">\n        <Button type=\"primary\" ghost size=\"small\" icon=\"md-build\" style=\"border:0;\" @click=\"handleRoleGoods(row)\">配置餐种</Button>\n        <Button type=\"primary\" ghost size=\"small\" icon=\"md-create\" style=\"border:0;\" @click=\"handleEdit(row)\">修改人员类型</Button>\n      </template>\n    </Table>\n  </div>\n</template>\n<script>\nimport * as dataConfig from '../dataConfig';\nimport _ from \"underscore\";\n\nexport default {\n  name: 'SearchTable',\n  // props: {\n  //   value: Array\n  // },\n  data() {\n    return {\n      columns: [],\n\n    };\n  },\n\n  components: {},\n\n  computed: {\n    curMerchantId(){\n      return this.$store.state.user.curMerchantId;\n    },\n    roleList() {\n      return this.$store.state.role.roleList;\n    },\n    loading() {\n      return this.$store.state.app.tableLoading;\n    },\n    GoodsList() {\n      return _.filter(this.$store.state.goods.goodsList.result, cur => {return cur.is_enable === 1;});\n    },\n    RoleGoodsList() {\n      return this.$store.state.role.roleGoodsList.result;\n    },\n\n  },\n\n  async mounted() {\n    this.init();\n    await this.queryGoodsList();\n    await this.queryRoleGoodsList();\n  },\n\n  methods: {\n    init() {\n      this.columns = dataConfig.columns;\n    },\n    handleEdit(row){\n      let data = {\n        role_id: row.role_id,\n        name: row.name,\n        is_enable: row.is_enable.toString(),\n      }\n      this.$store.commit('setEditRoleModal', true);\n      this.$store.commit('SETROLECURRENTDATA', data);\n    },\n\n    handleRoleGoods(row){\n      let data = {\n        role_id: row.role_id,\n        role_name: row.name,\n        goods: [],\n      };\n\n      // console.log(\"handleRoleGoods===out>>>\" + JSON.stringify(this.getCurrentRoleGoods(data.role_id)))\n      // 处理人员类型配置菜单\n      if (JSON.stringify(this.getCurrentRoleGoods(data.role_id)) == '[]'){\n        console.log(\"handleRoleGoods===>>>\" + JSON.stringify(this.getCurrentRoleGoods(data.role_id)))\n        for (let item of this.GoodsList){\n          let dataItem = {\n            // menu_id: null,\n            goods_id: null,\n            goods_name: '',\n            price: '',\n            role_status: false\n          };\n          dataItem.goods_id = item.goods_id;\n          dataItem.goods_name = item.goods_name;\n\n          data.goods.push(dataItem);\n        };\n      }\n      else{\n        //如果当前人员类型有配置就餐信息，则初始化传送过去的数据\n        let roleGoods = this.getCurrentRoleGoods(data.role_id);\n\n        // console.log(\"===>roleGoods===roleGoods:\" + JSON.stringify(roleGoods));\n        let isFind = 0;\n\n        for (let item of this.GoodsList)\n        {\n          // console.log(\"===>GoodsList===goods:\" + JSON.stringify(this.GoodsList));\n          // console.log(\"===>GoodsList===goodid:\" + item.goods_id + \", goodsname:\" + item.goods_name);\n          isFind = false;\n          for (let roleGoodsItem of roleGoods){\n            // console.log(\"===>roleGoodsItem===goodid:\" + roleGoodsItem.goods_id + \", goodsname:\" + roleGoodsItem.goods_name);\n            if (item.goods_id == roleGoodsItem.goods_id){\n              isFind = true;\n\n              let dataItem = {\n                // menu_id: null,\n                goods_id: '',\n                goods_name: '',\n                price: '',\n                role_status: false\n              };\n\n              dataItem = roleGoodsItem;\n              dataItem.role_status = true;\n              data.goods.push(dataItem);\n              // roleGoodsItem['role_status'] = \"1\";\n              // Object.assign(roleGoodsItem, {'role_status' : \"1\"})\n              break;\n            }\n          }\n          if (!isFind){\n            let dataItem = {\n              // menu_id: null,\n              goods_id: '',\n              goods_name: '',\n              price: '',\n              role_status: false\n            };\n            dataItem.goods_id = item.goods_id;\n            dataItem.goods_name = item.goods_name;\n\n            data.goods.push(dataItem);\n          }\n        };\n      }\n\n      this.$store.commit('setRoleGoodsModal', true);\n      this.$store.commit('SETROLEGOODSCURRENTDATA', data);\n    },\n\n    // 获取当前人员类型菜品\n    getCurrentRoleGoods(roleId) {\n      return _.filter(this.RoleGoodsList, cur => {return cur.role_id == roleId });\n    },\n\n    //获取人员类型配置需要的餐种列表\n    queryGoodsList: async function(page, page_size) {\n      let params = {\n        merchant_id: this.curMerchantId,\n        is_enable: 1,\n        page: page || 1,\n        page_size: page_size || this.$parent.page_size\n      };\n      return await this.$store.dispatch('goodsList', params);\n    },\n    //获取人员类型配置餐种列表\n    async queryRoleGoodsList(page, page_size) {\n      let params = {\n        merchant_id: this.curMerchantId,\n        // role_id: '',\n        page: page || 1,\n        page_size: page_size || this.$parent.page_size\n      };\n      return await this.$store.dispatch('getRoleGoodsList', params);\n    },\n  }\n}\n</script>\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/views/setting/role-setting/components"}]}