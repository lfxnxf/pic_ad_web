{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/views/staff-management/dining-staff/components/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/views/staff-management/dining-staff/components/table.vue","mtime":1639448798473},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["table.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\n<template>\n  <div>\n    <Table\n      ref=\"selection\"\n      border\n      stripe\n      :columns='columns'\n      :data='tableData'\n      :loading=\"loading\"\n      @on-selection-change=\"handleSelect\">\n      <template slot=\"role_id\" slot-scope=\"{ row }\">\n        <span>{{ usertype(row.role_id) }}</span>\n      </template>\n     \n      <template slot=\"handle\" slot-scope=\"{ row }\">\n        <Button class=\"margin-right-10\" type=\"success\" ghost size=\"small\" @click=\"toDetails(row.staff_id,row.name,row.usercode)\">查看</Button>\n        <Button class=\"margin-right-10\" type=\"primary\" ghost size=\"small\" @click=\"handleEdit(row)\">编辑</Button>\n        <Button type=\"info\" ghost size=\"small\" @click=\"handleDeposit(row)\">充值/提现</Button>\n      </template>\n    \n    </Table>\n  </div>\n</template>\n<script>\nimport _ from 'underscore';\nimport * as dataConfig from '../dataConfig';\nexport default {\n  name: 'SearchTable',\n  data() {\n    return {\n      columns: [],\n      current_id: '',\n      amountArr: [],\n      tableData: []\n    };\n  },\n\n  props: {\n    selectAll: Number,\n    freshRandom: Number,\n    userCodeData: String,\n  },\n\n  components: {},\n\n  computed: {\n    userData() {\n      return this.$store.state.user.userData;\n    },\n\n    loading() {\n      return this.$store.state.app.tableLoading;\n    },\n    roleList() {\n      return this.$store.state.role.roleList.result;\n    },\n    usertype() {\n      return (id)=>{\n        let val = '';\n        let current = _.find(this.roleList, cur=> {\n          return cur.role_id == id;\n        });\n        val = current ? current.name : '';\n        return val;\n      }\n    },\n \n    submitBatchModal(){\n      return this.$store.state.order.submitBatchModal;\n    }\n  },\n\n  methods: {\n    //获取人员类型列表\n    queryRole: async function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        is_enable: 1,\n        page: 1,\n        page_size: 5000\n      };\n      return await this.$store.dispatch('roleList', params).catch(err => err);\n    },\n    init(page) {\n      this.columns = dataConfig.columns;\n      let tmp = {\n        title: '序号',\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        show: true,\n        indexMethod: (row) => {\n          return row._index+((page || 1) - 1) * this.$parent.page_size + 1;\n        },\n      }\n      this.columns.splice(1,1,tmp);\n      this.columns.forEach((item) => {\n        if (item.key == 'status') {\n          item.render = (h, param) => {\n            let currentRow = param.row;\n            let showValue = currentRow[item.key];\n            let text = showValue == 1 ? '正常' : '已删除';\n            return h('span', {}, text);\n          }\n        }\n      });\n    },\n    //查询员工钱包账户余额信息\n    queryUserWalletBalance(usercode) {\n      if (usercode){\n        let params = {\n          usercode: usercode,\n          merchant_id: this.$store.state.user.curMerchantId,\n        };\n        this.$store.dispatch('userDetail', params).then(res=>{\n          let index = _.findIndex(this.tableData, { usercode : usercode });\n          this.tableData[index]['balance'] = res.data.balance;\n          // console.log('钱包余额:'+ res.data.balance + \", index=\" + index + \", usercode:\" + this.tableData[index]['usercode']);\n        });\n      }\n      // let params = {\n      //   sessionid: this.$store.state.user.token,\n      //   usercode: usercode,\n      //   merchant_code: this.$store.state.user.curMerchantUserCode,\n      // };\n      //\n      // this.$store.dispatch('userWalletBalance', params).then(res=>{\n      //   let walletInfo = _.find(res.info, cur => {\n      //     return cur.merchant_code == params.merchant_code;\n      //   });\n      //   let available_balance = (walletInfo.available_balance/100).toFixed(2);\n      //\n      //   let index = _.findIndex(this.tableData, { usercode : usercode });\n      //   // console.log('钱包余额:'+ available_balance + \", index=\" + index + \", usercode:\" + this.tableData[index]['usercode']);\n      //   this.tableData[index]['amount'] = available_balance;\n      //\n      // }).catch(err => err);\n\n\n    },\n\n    setEmployeeAdmin: async function(id) {\n      let res = await this.$store.dispatch('setEmployeeAdmin', { id: id }).catch(err => err);\n    },\n    toDetails(id,name,code){\n      console.log('id--------staff_id---',id)\n      this.$router.push({path: `/staffManagement/details/${id}/${code}`});\n    },\n    handleEdit(row){\n      this.$store.commit('setUserEditModal', true);\n      this.$store.commit('getUserEditData', row);\n    },\n    handleDeposit(row){\n      this.$store.commit('setPersonaLDepositModal', true);\n      this.$store.commit('getUserEditData', row);\n    },\n    handleSelect(val){\n      this.$store.commit('SELECTEDUSERLIST', val);\n    },\n\n  },\n  mounted() {\n    this.init();\n    this.queryRole();\n  },\n  deactivated(){\n    this.$refs.selection.selectAll(false);\n  },\n\n  watch: {\n    selectAll(val) {\n      if(val){\n        this.$refs.selection.selectAll(false);\n      }\n    },\n    userData(val){\n      if(val){\n        this.tableData = [];\n        for(let item of val.result){\n          this.tableData.push({...item});\n        }\n      }\n    },\n    freshRandom(val){\n      if(val){\n        setTimeout(()=>{\n          if (this.userCodeData.length == 0){\n            this.$parent.query();\n          }\n          else{\n            let userTableData = this.userCodeData.split(\",\");\n            for(let usercode of userTableData){\n              this.queryUserWalletBalance(usercode);\n            }\n          }\n        },1000 );\n      }\n    },\n  }\n\n\n}\n</script>\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/views/staff-management/dining-staff/components"}]}