{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js!/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/工作/pic_ad/src/components/department-tree/department-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/components/department-tree/department-tree.vue","mtime":1644998572156},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96aGFuZy9cdTVERTVcdTRGNUMvcGljX2FkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IF8gZnJvbSAndW5kZXJzY29yZSc7CmltcG9ydCB7IGJ1aWxkQ2hpbGREZXBhcnRtZW50QXJyYXksIGJ1aWxkRGVwYXJ0bWVudFRyZWUsIGJ1aWxkVHJlZSB9IGZyb20gIkAvbGlicy91dGlsIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aW1lczogMCwKICAgICAgdGltZXI6IG51bGwsCiAgICAgIHRyZWVEYXRhOiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHt9LAogIGNvbXB1dGVkOiB7CiAgICBkZXBhcnRtZW50TGlzdDogZnVuY3Rpb24gZGVwYXJ0bWVudExpc3QoKSB7CiAgICAgIHZhciBkZXBhcnRtZW50cyA9IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIubWVyY2hhbnREZXBhcnRtZW50TGlzdDsKCiAgICAgIGlmIChkZXBhcnRtZW50cy5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMudGltZXMrKzsKCiAgICAgICAgaWYgKHRoaXMudGltZXMgPiA1KSB7CiAgICAgICAgICAvLyBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7CiAgICAgICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoYXQuZ2V0RGVwYXJ0bWVudExpc3QoKTsKICAgICAgICAgIH0sIDMwMDApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmdldERlcGFydG1lbnRMaXN0KCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlci5tZXJjaGFudERlcGFydG1lbnRMaXN0OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy/ojrflj5bpg6jpl6jliJfooagKICAgIGdldERlcGFydG1lbnRMaXN0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0RGVwYXJ0bWVudExpc3QgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHBhcmFtcywgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgbWVyY2hhbnRfaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuY3VyTWVyY2hhbnRJZCwKICAgICAgICAgICAgICAgICAgbGV2ZWw6IDEKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0TWVyY2hhbnREZXBhcnRtZW50TGlzdCcsIHBhcmFtcyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgdGhpcy50aW1lcyA9IDA7CiAgICAgICAgICAgICAgICB9IC8vIGNvbnNvbGUubG9nKCJnZXREZXBhcnRtZW50TGlzdD09PXRpbWVzPj4+IiArIEpTT04uc3RyaW5naWZ5KHRoaXMudGltZXMpKQogICAgICAgICAgICAgICAgLy8gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldE1lcmNoYW50RGVwYXJ0bWVudExpc3QnLCBwYXJhbXMpLnRoZW4ocmVzPT57CiAgICAgICAgICAgICAgICAvLyAgIGlmKHJlcy5yZXR1cm5fY29kZT09MCl7CiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy50cmVlRGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICAgICAgLy8gICB9CiAgICAgICAgICAgICAgICAvLyB9KS5jYXRjaChlcnI9PnsKICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAvLyB9KTsKCgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXREZXBhcnRtZW50TGlzdCgpIHsKICAgICAgICByZXR1cm4gX2dldERlcGFydG1lbnRMaXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXREZXBhcnRtZW50TGlzdDsKICAgIH0oKSwKICAgIC8vIC8v6I635Y+W6YOo6Zeo5YiX6KGoCiAgICAvLyBxdWVyeURlcGFydG1lbnQ6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICBsZXQgcGFyYW1zID0gewogICAgLy8gICAgIG9yZ19pZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlci5jdXJPcmdJZCwKICAgIC8vICAgICBzZXNzaW9uaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudG9rZW4sCiAgICAvLyAgICAgbGltaXQ6IDIwMDAKICAgIC8vICAgfTsKICAgIC8vICAgcmV0dXJuIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdkZXBhcnRtZW50TGlzdCcsIHBhcmFtcyk7CiAgICAvLyB9LAogICAgLy8KICAgIC8vIC8v6I635Y+W6K+l6aOf5aCC5ZWG5oi35LiL5omA5pyJ5a2Q6YOo6Zeo5YiX6KGoCiAgICAvLyBxdWVyeUNoaWxkRGVwYXJ0bWVudDogYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgIGxldCBwYXJhbXMgPSB7CiAgICAvLyAgICAgbWVyY2hhbnRfaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuY3VyTWVyY2hhbnRJZCwKICAgIC8vICAgfTsKICAgIC8vICAgcmV0dXJuIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1c2VyQ2hpbGREZXBhcnRtZW50JywgcGFyYW1zKTsKICAgIC8vIH0sCiAgICAvLyAgICAvL+iOt+WPluW9k+WJjemjn+WgguWVhuaIt+eahOmDqOmXqOagkQogICAgLy8gZ2V0TWVyY2hhbnREZXBhcnRtZW50OiBhc3luYyBmdW5jdGlvbigpIHsKICAgIC8vICAgbGV0IGRlcGFydFRyZWUgPSBidWlsZERlcGFydG1lbnRUcmVlKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckNoaWxkRGVwYXJ0bWVudExpc3QsdGhpcy4kc3RvcmUuc3RhdGUudXNlci5lbXBEZXBhcnRtZW50TGlzdCk7CiAgICAvLyAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnVXBkYXRlRGVwYXJ0bWVudExpc3QnLCBkZXBhcnRUcmVlKTsKICAgIC8vICAgaWYgKGRlcGFydFRyZWUubGVuZ3RoID4gMCkgewogICAgLy8gICAgIHRoaXMudHJlZURhdGEgPSBidWlsZFRyZWUoZGVwYXJ0VHJlZSwge30sICdkZXBhcnRtZW50X2lkJywgJ3BhcmVudGlkJywgJ2NoaWxkcmVuJyk7CiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICBjaG9pY2VUcmVlOiBmdW5jdGlvbiBjaG9pY2VUcmVlKGRhdGEpIHsKICAgICAgdmFyIGNob2ljZXNEYXRhID0gdGhpcy4kcmVmcy50cmVlLmdldENoZWNrZWROb2RlcygpOyAvL+aWueazleeahOi/kOeUqCBnZXRTZWxlY3RlZE5vZGVz5Lmf5piv5aaC5q2k55So5rOVCgogICAgICB2YXIgZGVwYXJ0bWVudHMgPSBfLnBsdWNrKGNob2ljZXNEYXRhLCAnZGVwYXJ0bWVudF9pZCcpOwoKICAgICAgdGhpcy4kZW1pdCgnZm9ybURlcGFydG1lbnRzJywgZGVwYXJ0bWVudHMpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsvLyB0aGlzLmdldERlcGFydG1lbnRMaXN0KCk7CiAgfSwKICAvLyBjcmVhdGVkKCl7CiAgLy8gICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gewogIC8vICAgICBsZXQgc2VsZiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0cmVlJyk7CiAgLy8gICAgIGlmKCFzZWxmLmNvbnRhaW5zKGUudGFyZ2V0KSl7CiAgLy8gICAgICAgdGhpcy50cmVlRGF0YVswXVsnZXhwYW5kJ10gPSBmYWxzZTsKICAvLyAgICAgfQogIC8vICAgfSkKICAvLyB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgLy8gdGhpcy50cmVlRGF0YVswXVsnZXhwYW5kJ10gPSBmYWxzZTsKICAgIHRoaXMuZGVwYXJ0bWVudExpc3RbMF1bJ2V4cGFuZCddID0gZmFsc2U7CiAgfQp9Ow=="},{"version":3,"sources":["department-tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAiBA,OAAA,CAAA,MAAA,YAAA;AACA,SAAA,yBAAA,EAAA,mBAAA,EAAA,SAAA,QAAA,aAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AASA,EAAA,UAAA,EAAA,EATA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,WAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,sBAAA;;AACA,UAAA,WAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,KAAA;;AAEA,YAAA,KAAA,KAAA,GAAA,CAAA,EAAA;AACA;AACA,cAAA,IAAA,GAAA,IAAA;AACA,eAAA,KAAA,GAAA,UAAA,CAAA,YAAA;AACA,YAAA,IAAA,CAAA,iBAAA;AACA,WAFA,EAEA,IAFA,CAAA;AAGA,SANA,MAOA;AACA,eAAA,iBAAA;AACA;AACA;;AAEA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,sBAAA;AACA;AAnBA,GAXA;AAiCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,iBAAA;AAAA,uFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACA;AACA,kBAAA,WAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,aADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBADA;AAAA;AAAA,uBAMA,KAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,MAAA,CANA;;AAAA;AAMA,gBAAA,GANA;;AAQA,oBAAA,GAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,uBAAA,KAAA,GAAA,CAAA;AACA,iBAVA,CAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,UAlDA,sBAkDA,IAlDA,EAkDA;AACA,UAAA,WAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,eAAA,EAAA,CADA,CACA;;AACA,UAAA,WAAA,GAAA,CAAA,CAAA,KAAA,CAAA,WAAA,EAAA,eAAA,CAAA;;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,WAAA;AACA;AAtDA,GAjCA;AA2FA,EAAA,OA3FA,qBA2FA,CACA;AACA,GA7FA;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAvGA,uBAuGA;AACA;AACA,SAAA,cAAA,CAAA,CAAA,EAAA,QAAA,IAAA,KAAA;AACA;AA1GA,CAAA","sourcesContent":["<!-- 部门树 -->\n<template>\n  <div >\n    <!-- <Tree id=\"tree\" :data=\"treeData\" @on-check-change=\"choiceTree\" ref=\"tree\" show-checkbox multiple @click.stop=\"treeData[0]['expand']=true;\"></Tree>  -->\n    <Tree\n        id=\"tree\"\n        :data=\"departmentList\"\n        @on-check-change=\"choiceTree\"\n        ref=\"tree\"\n        show-checkbox\n        empty-text=\"暂无部门数据\"\n        multiple>\n    </Tree>\n  </div>\n</template>\n\n<script>\nimport _ from 'underscore';\nimport {buildChildDepartmentArray, buildDepartmentTree, buildTree} from \"@/libs/util\";\nexport default {\n  data () {\n    return {\n      times: 0,\n      timer: null,\n      treeData: []\n    };\n  },\n\n  components: {},\n\n  computed: {\n    departmentList(){\n      let departments = this.$store.state.user.merchantDepartmentList;\n      if (departments.length == 0){\n        this.times++ ;\n\n        if (this.times > 5){\n          // clearTimeout(this.timer);\n          let that = this;\n          this.timer = setTimeout(() => {\n            that.getDepartmentList();\n          },3000);\n        }\n        else{\n          this.getDepartmentList();\n        }\n      }\n\n      return this.$store.state.user.merchantDepartmentList;\n    }\n  },\n\n  methods: {\n    //获取部门列表\n    getDepartmentList: async function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        level: 1,\n      };\n\n      let res = await this.$store.dispatch('getMerchantDepartmentList', params);\n\n      if (res.data.length > 0){\n        this.times = 0;\n      }\n\n      // console.log(\"getDepartmentList===times>>>\" + JSON.stringify(this.times))\n\n      // await this.$store.dispatch('getMerchantDepartmentList', params).then(res=>{\n      //   if(res.return_code==0){\n      //     this.treeData = res.data;\n      //   }\n      // }).catch(err=>{\n      //\n      // });\n    },\n\n    // //获取部门列表\n    // queryDepartment: async function() {\n    //   let params = {\n    //     org_id: this.$store.state.user.curOrgId,\n    //     sessionid: this.$store.state.user.token,\n    //     limit: 2000\n    //   };\n    //   return await this.$store.dispatch('departmentList', params);\n    // },\n    //\n    // //获取该食堂商户下所有子部门列表\n    // queryChildDepartment: async function() {\n    //   let params = {\n    //     merchant_id: this.$store.state.user.curMerchantId,\n    //   };\n    //   return await this.$store.dispatch('userChildDepartment', params);\n    // },\n    //    //获取当前食堂商户的部门树\n    // getMerchantDepartment: async function() {\n    //   let departTree = buildDepartmentTree(this.$store.state.user.userChildDepartmentList,this.$store.state.user.empDepartmentList);\n    //   this.$store.commit('UpdateDepartmentList', departTree);\n    //   if (departTree.length > 0) {\n    //     this.treeData = buildTree(departTree, {}, 'department_id', 'parentid', 'children');\n    //   }\n    // },\n    choiceTree(data){\n      let choicesData=this.$refs.tree.getCheckedNodes(); //方法的运用 getSelectedNodes也是如此用法\n      let departments = _.pluck(choicesData, 'department_id');\n      this.$emit('formDepartments', departments);\n    },\n\n  },\n\n  mounted() {\n    // this.getDepartmentList();\n  },\n\n  // created(){\n  //   document.addEventListener('click', e => {\n  //     let self = document.getElementById('tree');\n  //     if(!self.contains(e.target)){\n  //       this.treeData[0]['expand'] = false;\n  //     }\n  //   })\n  // },\n  destroyed(){\n    // this.treeData[0]['expand'] = false;\n    this.departmentList[0]['expand'] = false;\n  }\n}\n\n</script>\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/components/department-tree"}]}