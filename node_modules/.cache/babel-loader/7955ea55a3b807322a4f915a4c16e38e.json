{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js!/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/工作/pic_ad/src/views/statistics/stat-order/components/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/views/statistics/stat-order/components/form.vue","mtime":1640594514671},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 就餐统计数据 -->\n<template>\n  <div class=\"card\">\n    <Form inline ref=\"form\" :model=\"form\" label-colon>\n      <FormItem label=\"汇总方式\">\n        <RadioGroup v-model=\"form.unit\">\n          <Radio label=\"day\">按日期</Radio>\n          <Radio label=\"month\">按月</Radio>\n        </RadioGroup>\n      </FormItem>\n      <FormItem label=\"汇总日期起止\" v-if=\"form.unit == 'day'\">\n        <DatePicker @keyup.enter.native=\"queryStat()\" v-model=\"form.date\" type=\"daterange\" format=\"yyyy/MM/dd\" placeholder=\"汇总日期起止\" style=\"width: 200px\"></DatePicker>\n        <Input type=\"text\" v-show=\"false\" style=\"width: 1px;\"/>\n      </FormItem>\n      <FormItem label=\"汇总月份起止\" v-if=\"form.unit == 'month'\">\n        <DatePicker class=\"margin-right-5\" @keyup.enter.native=\"queryStat()\" v-model=\"form.startMonth\" type=\"month\" format=\"yyyy-MM\" placeholder=\"汇总月份起\" style=\"width:100px\"></DatePicker>-\n        <DatePicker @keyup.enter.native=\"queryStat()\" v-model=\"form.endMonth\" type=\"month\" format=\"yyyy-MM\" placeholder=\"汇总月份止\" style=\"width:100px\"></DatePicker>\n      </FormItem>\n      <FormItem>\n        <Select \n          v-model=\"form.goods_ids\"\n          placeholder=\"请选择餐种\" \n          @keyup.enter.native=\"queryStat()\"\n          multiple \n          @on-change=\"handleSelect(form.goods_ids,'goods_id')\" \n          style=\"min-width: 100px;\">\n          <Option value=\"-1\" >全部餐种</Option>\n          <Option v-for=\"item in goodsList\" :disabled=\"form.goods_id=='-1'\" :key=\"item.goods_id\" :value=\"item.goods_id\" :label=\"item.goods_name\">\n            {{ item.goods_name }}\n          </Option>\n        </Select>\n      </FormItem>\n      <FormItem>\n        <Select placeholder=\"人员类型\" @keyup.enter.native=\"queryStatistics()\" v-model=\"form.role_id\" multiple @on-change=\"handleSelect(form.role_id,'role_id')\" style=\"min-width: 100px;\">\n          <Option value=\"-1\" >全部人员类型</Option>\n          <Option v-for=\"item in roleList\" :disabled=\"form.role_id=='-1'\" :key=\"item.role_id\" :value=\"item.role_id\" :label=\"item.name\">\n            {{ item.name }}\n          </Option>\n        </Select>\n      </FormItem>\n      <FormItem class=\"departments_tree\">\n        <department-tree @formDepartments=\"getDepartments\"></department-tree>\n      </FormItem>\n      <FormItem>\n        <Button type='primary' icon=\"md-search\" @click=\"queryStat()\">查询</Button>\n        <Button class=\"margin-left-10\" type='primary' ghost icon=\"md-download\" @click=\"exportOrder\">导出EXCEL</Button>\n      </FormItem>\n\n    </Form>\n  </div>\n</template>\n<script>\nimport _ from 'underscore';\nimport moment from \"moment-timezone\";\nimport {buildChildDepartmentArray, downloadFile} from \"@/libs/util\";\nimport departmentTree from '@/components/department-tree';\nexport default {\n  name: 'searchForm',\n  data() {\n    return {\n      form: {\n        date: [moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')],\n        unit: 'day',\n        startMonth: moment().format('YYYY-MM'),\n        endMonth: moment().format('YYYY-MM'),\n        goods_ids: [],\n        role_ids: [],\n        departments: [],\n      },\n      export_excel_params: {},\n    };\n  },\n\n  components: { departmentTree },\n\n  computed: {\n    goodsList(){\n      return this.$store.state.goods.goodsList.result;\n    },\n    roleList() {\n      return this.$store.state.role.roleList.result;\n    },\n    resultForm(){\n      let data = {\n        unit: this.form.unit,\n        goods_ids: this.form.goods_ids[0]=='-1'? '':this.form.goods_ids.toString(),\n        start: moment(this.form.date[0]).format('YYYY-MM-DD'),\n        end: moment(this.form.date[1]).format('YYYY-MM-DD'),\n        role_ids: this.form.role_ids[0]=='-1'? '':this.form.role_ids.toString(),\n        departments: this.form.departments[0]=='-1'? '':this.form.departments.toString(),\n      }\n\n      if (this.form.unit == 'month'){\n        data.start = moment(this.form.startMonth).format('YYYY-MM');\n        data.end = moment(this.form.endMonth).format('YYYY-MM');\n      }\n      return data;\n    },\n\n  },\n\n  methods: {\n\n    queryStat: async function(page) {\n      this.$store.commit('TABLE_LOADING', true);\n      let startDate = this.resultForm.start || '';\n      let endDate = this.resultForm.end || '';\n      if (startDate == '' || startDate == 'Invalid date' || endDate == '' || endDate == 'Invalid date'){\n        this.$Message.error(\"请选择就餐统计日期起止！\");\n        this.$store.commit('TABLE_LOADING', false);\n        return;\n      }\n      this.$emit('getDate', this.resultForm);\n      // // this.$store.commit('setEmployeeListLoading', true);\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        page: page || 1,\n        page_size: this.$parent.page_size,\n        ...this.resultForm\n      };\n      // console.log(\"queryStat===params>>>\" + JSON.stringify(params));\n      let res = await this.$store.dispatch('statisticsOrder', params);\n      // console.log(\"queryStat===res>>>\" + JSON.stringify(res));\n      this.$refs['form'].resetFields();\n    },\n\n    exportOrder: async function() {\n      let fileName = '就餐报表';\n      this.$store.commit('TABLE_LOADING', true);\n      let startDate = this.resultForm.start || '';\n      let endDate = this.resultForm.end || '';\n      if (startDate == '' || startDate == 'Invalid date' || endDate == '' || endDate == 'Invalid date'){\n        this.$Message.error(\"请选择就餐统计日期起止！\");\n        this.$store.commit('TABLE_LOADING', false);\n        return;\n      }\n      // this.$emit('getDate', this.resultForm);\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        ...this.resultForm\n      };\n      let queryArray = params.departments || '';\n      if (queryArray !== ''){\n        let stringResult = queryArray.split(',');\n        let departArray = buildChildDepartmentArray(stringResult,this.$store.state.user.departmentList);\n        let arrayResult = departArray.join(',');\n        params.departments = arrayResult;\n      }\n      let res = await this.$store.dispatch('statisticsOrderExport', params);\n      if (res.return_code == 0){\n        let fileUrl = res.data.url;\n        downloadFile(fileUrl, fileName);\n      }\n      this.$store.commit('TABLE_LOADING', false);\n    },\n\n    //数据导出\n    listResultExport: async function(pageSize) {\n      this.$store.commit('TABLE_LOADING', true);\n      let startDate = this.resultForm.start_date || '';\n      let endDate = this.resultForm.end_date || '';\n      if (startDate == '' || startDate == 'Invalid date' || endDate == '' || endDate == 'Invalid date'){\n        this.$Message.error(\"请选择就餐日期起止！\");\n        this.$store.commit('TABLE_LOADING', true);\n        return;\n      }\n\n      let maxPageSize = pageSize ? pageSize : this.$parent.page_size;\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        page: 1,\n        page_size: maxPageSize,\n        ...this.resultForm\n      };\n\n      let res = await this.$store.dispatch('orderListExport', params);\n    },\n\n    //多选select\n    handleSelect(val, name){\n      if(_.indexOf(val, '-1') != -1){\n        this.form[name] = ['-1'];\n      }\n    },\n\n\n    getDepartments(val){\n      this.form.departments = val;\n    },\n\n    //查询角色\n    queryRoleList: async function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        is_enable: 1,\n        page: 1,\n        page_size: 10000\n      };\n      await this.$store.dispatch('roleList', params);\n\n    },\n\n    queryGoods: function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        is_enable: 1,\n      };\n      this.$store.dispatch('goodsList', params);\n    },\n\n  },\n  async mounted() {\n    this.queryGoods();\n    this.queryRoleList();\n    this.queryStat();\n  }\n}\n</script>\n<style lang='less' scoped>\n.card{\n  padding-bottom: 0 !important;\n  // min-height: 76px;\n  // max-height: 133px;\n}\n\n</style>\n"],"sourceRoot":"src/views/statistics/stat-order/components"}]}