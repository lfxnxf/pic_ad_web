{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js!/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/工作/pic_ad/src/views/statistics/reserve-stat/components/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/views/statistics/reserve-stat/components/form.vue","mtime":1644998572175},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\n<template>\n  <div class=\"card\">\n    <Form inline ref=\"form\" :model=\"form\" label-colon>\n      <FormItem label=\"交易日期起止\">\n        <DatePicker @keyup.enter.native=\"query()\" v-model=\"form.date\" type=\"daterange\" format=\"yyyy/MM/dd\" placeholder=\"就餐日期起止\" style=\"width: 200px\"></DatePicker>\n        <Input type=\"text\" v-show=\"false\" style=\"width: 1px;\"/>\n      </FormItem>\n      <FormItem>\n        <Select placeholder=\"交易类型\" @keyup.enter.native=\"query()\" v-model=\"form.trade_types\" multiple @on-change=\"handleSelect(form.trade_types,'trade_types')\"  style=\"min-width: 100px;\">\n          <Option value=\"-1\">全部交易类型</Option>\n          <Option value=\"1\" :disabled=\"form.trade_types=='-1'\">消费</Option>\n          <Option value=\"2\" :disabled=\"form.trade_types=='-1'\">充值</Option>\n          <Option value=\"3\" :disabled=\"form.trade_types=='-1'\">提现</Option>\n          <Option value=\"4\" :disabled=\"form.trade_types=='-1'\">退款</Option>\n          <Option value=\"5\" :disabled=\"form.trade_types=='-1'\">充值撤销</Option>\n        </Select>\n      </FormItem>\n      <FormItem>\n        <Select placeholder=\"人员类型\" @keyup.enter.native=\"query()\" v-model=\"form.role_ids\" multiple @on-change=\"handleSelect(form.role_ids,'role_ids')\" style=\"min-width:100px;\">\n          <Option value=\"-1\" >全部人员类型</Option>\n          <Option v-for=\"item in roleList\" :disabled=\"form.role_ids=='-1'\" :key=\"item.role_id\" :value=\"item.role_id\" :label=\"item.name\">\n            {{ item.name }}\n          </Option>\n        </Select>\n      </FormItem>\n<!--      <FormItem>-->\n<!--        <Select placeholder=\"职务\" @keyup.enter.native=\"queryStatistics()\" v-model=\"form.group\" multiple @on-change=\"handleSelect(form.group,'group')\" style=\"min-width: 100px;\">-->\n<!--          <Option value=\"-1\" >全部职务</Option>-->\n<!--          <Option :disabled=\"form.status_str=='-1'\" value=\"1\">职员</Option>-->\n<!--          <Option :disabled=\"form.status_str=='-1'\" value=\"2\">处长</Option>-->\n<!--          <Option :disabled=\"form.status_str=='-1'\" value=\"3\">局长</Option>-->\n<!--        </Select>-->\n<!--      </FormItem>-->\n      <FormItem class=\"departments_tree\">\n        <department-tree @formDepartments=\"getDepartments\"></department-tree>\n      </FormItem>\n\n      <FormItem>\n        <Button type='primary' icon=\"md-search\" @click=\"query()\">查询</Button>\n        <Button class=\"margin-left-10\" type='primary' ghost icon=\"md-download\" @click=\"exportTrade\">导出EXCEL</Button>\n      </FormItem>\n    </Form>\n  </div>\n</template>\n<script>\nimport _ from 'underscore';\nimport moment from \"moment-timezone\";\nimport {buildChildDepartmentArray, downloadFile} from \"@/libs/util\";\nimport departmentTree from '@/components/department-tree';\n\nexport default {\n  name: 'searchForm',\n  data() {\n    return {\n      form: {\n        date: [moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')],\n        trade_types: [],\n        departments: [],\n        role_ids: [],\n        group: '',\n      },\n\n    };\n  },\n\n  components: { departmentTree },\n\n  computed: {\n    resultForm(){\n      let data = {\n        user_group: this.form.group[0]=='-1'? '':this.form.group.toString(),\n        start_date: moment(this.form.date[0]).format('YYYY-MM-DD'),\n        end_date: moment(this.form.date[1]).format('YYYY-MM-DD'),\n        trade_types: this.form.trade_types[0]=='-1'? '':this.form.trade_types.toString(),\n        departments: this.form.departments[0]=='-1'? '':this.form.departments.toString(),\n        role_ids: this.form.role_ids[0]=='-1'? '':this.form.role_ids.toString(),\n      }\n      return data;\n    },\n    departmentList() {\n      return this.$store.state.user.departmentList;\n    },\n    roleList() {\n      return this.$store.state.role.roleList.result;\n    },\n\n  },\n\n  methods: {\n    query: async function(page) {\n      this.$store.commit('TABLE_LOADING', true);\n      let startDate = this.resultForm.start_date || '';\n      let endDate = this.resultForm.end_date || '';\n      if (startDate == '' || startDate == 'Invalid date' || endDate == '' || endDate == 'Invalid date'){\n        this.$Message.error(\"请选择交易统计日期起止！\");\n        this.$store.commit('TABLE_LOADING', false);\n        return;\n      }\n      // this.$store.commit('setEmployeeListLoading', true);\n      this.$emit('getDate', this.resultForm);\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        page: page || 1,\n        page_size: this.$parent.page_size,\n        ...this.resultForm\n      };\n      let queryArray = params.departments || '';\n      if (queryArray !== ''){\n        let stringResult = queryArray.split(',');\n        let departArray = buildChildDepartmentArray(stringResult,this.$store.state.user.departmentList);\n        let arrayResult = departArray.join(',');\n        params.departments = arrayResult;\n      }\n      await this.$store.dispatch('statisticsTradeList', params);\n    },\n    handleSelect(val, name){\n      if(_.indexOf(val, '-1') != -1){\n        this.form[name] = ['-1'];\n      }\n    },\n\n    exportTrade: async function() {\n      let fileName = '就餐交易列表';\n      this.$store.commit('TABLE_LOADING', true);\n      let startDate = this.resultForm.start_date || '';\n      let endDate = this.resultForm.end_date || '';\n      if (startDate == '' || startDate == 'Invalid date' || endDate == '' || endDate == 'Invalid date'){\n        this.$Message.error(\"请选择就餐统计日期起止！\");\n        this.$store.commit('TABLE_LOADING', false);\n        return;\n      }\n      // this.$emit('getDate', this.resultForm);\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        ...this.resultForm\n      };\n      let queryArray = params.departments || '';\n      if (queryArray !== ''){\n        let stringResult = queryArray.split(',');\n        let departArray = buildChildDepartmentArray(stringResult,this.$store.state.user.departmentList);\n        let arrayResult = departArray.join(',');\n        params.departments = arrayResult;\n      }\n      let res = await this.$store.dispatch('statisticsTradeExport', params);\n      if (res.return_code == 0){\n        let fileUrl = res.data.url;\n        downloadFile(fileUrl, fileName);\n      }\n      this.$store.commit('TABLE_LOADING', false);\n    },\n\n    //获取人员类型列表\n    queryRole: async function(page, page_size) {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        is_enable: 1,\n        page: page || 1,\n        page_size: page_size || this.$parent.page_size\n      };\n      return await this.$store.dispatch('roleList', params);\n    },\n\n    getDepartments(val){\n      this.form.departments = val;\n    }\n\n  },\n  async mounted() {\n    this.queryRole();\n    this.query();\n  }\n}\n</script>\n<style lang='less' scoped>\n.card{\n  padding-bottom: 0 !important;\n  // min-height: 76px;\n  // max-height: 133px;\n}\n</style>\n"],"sourceRoot":"src/views/statistics/reserve-stat/components"}]}