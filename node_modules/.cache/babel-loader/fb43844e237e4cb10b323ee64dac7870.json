{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/views/common/login/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/views/common/login/login.vue","mtime":1638355006777},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\n<template>\n  <div class=\"login loginV2\">\n    <Spin class=\"login_spin\" size=\"large\" fix v-if=\"spinShow\">\n      <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n      <div class=\"margin-top-10 font-size16\">登录中</div>\n    </Spin>\n    <login-nav></login-nav>\n    <div class=\"content\">\n      <div class=\"mask\"></div>\n      <div class=\"form_wrapper\">\n        <img src=\"@/assets/images/login_bg.jpg\" alt=\"\">\n        <form-computer class=\"form-computer\"></form-computer>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport loginNav from '@/components/login-nav';\nimport FormComputer from './components/form-computer';\nimport _ from 'underscore';\nimport { localSave, localRead, setCookiesItem } from '@/libs/util';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      spinShow: false\n    };\n  },\n\n  components: {\n    loginNav,\n    FormComputer,\n  },\n\n  computed: {},\n\n  methods: {\n    // 使用icloud的token换取用户中心sessionid，这个逻辑有问题，不能用token在web端登录，具体原因为：获取icloud token，web无法直接从云门户通过code换取token，云门户不允许跨域，需要服务端用code换取token\n    fetchIcpAccessToken: async function(code) {\n      let params = {\n        code: code,\n      };\n      let userInfo = await this.$store.dispatch('adminLogin', params);\n      console.log(\"fetchIcpAccessToken----->>>>>\" + JSON.stringify(userInfo))\n      return userInfo;\n    },\n\n    // 判断是否为第三方认证回调\n    thirdAuth: async function(args) {\n      let result = {\n        pos: 0, // 0-非三方认证，1 - 三方认证成功，-1 - 三方认证失败，\n        msg: '',\n        data: {}\n      };\n      try {\n        if (!_.isEmpty(args) && _.has(args, 'code')) {\n          // 校验参数是否为第三方认证，且参数是否合法\n          result.pos = 1;\n          let state = _.has(args, 'state') && Object.prototype.toString.call(args.state) === '[object String]' ? JSON.parse(args.state) : {};\n          switch (state.type) {\n            case 'icloud':\n              let icloudRes = await this.fetchIcpAccessToken(args.code);\n              result.data = icloudRes;\n              break;\n            default:\n              break;\n          }\n        }\n        return result;\n      } catch (e) {\n        result.pos = -1;\n        console.log(e);\n        return result;\n      }\n    },\n\n    // 保存本地数据\n    saveLocal: async function(ucRes) {\n      console.log(\"saveLocal ===> \", JSON.stringify(ucRes));\n      this.$store.commit('setAdminRole', ucRes.admin_role);\n      this.$store.commit('setCurDepartment', ucRes.department);\n      this.$store.commit('setCurDepartmentName', ucRes.department_name);\n      this.$store.commit('setCurEmpId', ucRes.emp_id);\n      this.$store.commit('setLastLoginTime', ucRes.last_login_time);\n      this.$store.commit('setCurUserName', ucRes.name);\n      this.$store.commit('setCurOrgId', ucRes.org_id);\n      console.log(\"ucRes.org_id ===> \", ucRes.org_id);\n      this.$store.commit('setCurOrgName', ucRes.org_name);\n      console.log(\"ucRes.org_name ===> \", ucRes.org_name);\n      this.$store.commit('setCurUserCode', ucRes.usercode);\n      console.log(\"ucRes.usercode ===> \", ucRes.usercode);\n      this.$store.commit('setToken', ucRes.sessionid);\n      console.log(\"ucRes.sessionid ===> \", ucRes.sessionid);\n      this.$store.commit('setEmpUserCode', ucRes.c_usercode);\n      console.log(\"ucRes.c_usercode ===> \", ucRes.c_usercode);\n      this.$store.commit('setCurMerchantId', ucRes.merchant_id);\n      console.log(\"ucRes.merchant_id ===> \", ucRes.merchant_id);\n      ucRes.merchant_name = ucRes.merchant_id?ucRes.merchant_name:'管理员';\n      this.$store.commit('setCurMerchantName', ucRes.merchant_name);\n      console.log(\"ucRes.merchant_name ===> \", ucRes.merchant_name);\n      this.$store.commit('setCurMerchantUserCode', ucRes.merchant_code);\n      console.log(\"ucRes.merchant_usercode ===> \", ucRes.merchant_code);\n    },\n\n  },\n\n  async mounted() {\n    // console.log('this.$route.query ====> ', this.$route.query)\n    let args = this.$route.query;\n\n    if (_.isEmpty(args))\n      return;\n\n    try {\n      let thirdAuthRes = await this.thirdAuth(args);\n      let ucRes = {};\n      \n      switch (thirdAuthRes.pos) {\n        case 1:\n          this.spinShow = true;\n          if (thirdAuthRes.data.data === \"{}\"){\n            let msg = '认证异常';\n            this.$Message.error({\n              content: msg,\n              duration: 10,\n              closable: true\n            });\n            this.$router.replace({path:'/login'});\n          }\n\n          ucRes = thirdAuthRes.data.data;\n          this.saveLocal(ucRes);\n\n          let isAdmin = false;\n          this.spinShow = false;\n          if (ucRes.admin_role === \"supervisor_admin\") {\n            isAdmin = true;\n            this.$Message.success('登录成功');\n            this.spinShow = false;\n            this.$router.push({path: '/business-information/basic-information'});\n          }\n          if (ucRes.admin_role === \"merchant_admin\") {\n            isAdmin = true;\n            this.$Message.success('登录成功');\n            this.spinShow = false;\n            this.$router.push({path: '/business-information/basic-information'});\n          }\n\n          if (!isAdmin){\n            this.spinShow = false;\n            this.$Message.success('登录失败');\n            this.$router.replace({path: '/login'});\n          }\n          break;\n        case -1:\n          this.$Message.error('登录失败!!');\n          this.$router.replace({path: '/login'});\n          break;\n        default:\n          this.$Message.error('登录失败!');\n          this.$router.replace({path: '/login'});\n          break;\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n</script>\n<style lang='less' scoped>\n@import './style';\n</style>\n"],"sourceRoot":"src/views/common/login"}]}