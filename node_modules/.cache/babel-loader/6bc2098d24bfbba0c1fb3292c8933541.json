{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/views/components/input-excel/inputExcel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/views/components/input-excel/inputExcel.vue","mtime":1638355006788},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgWExTWCBmcm9tICd4bHN4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJpbnB1dEV4Y2VsIiwKICBwcm9wczogewogICAgYnRuTmFtZTogU3RyaW5nLAogICAgImRlZmF1bHQiOiAi6YCJ5oupZXhjZWzmlofku7YiCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNTaG93OiB0cnVlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYnRuQ2xpY2s6IGZ1bmN0aW9uIGJ0bkNsaWNrKCkgewogICAgICBpZiAodGhpcy5pc1Nob3cgPT09IGZhbHNlKSB7CiAgICAgICAgdGhpcy5pc1Nob3cgPSB0cnVlOwogICAgICAgIHNldFRpbWVvdXQodGhpcy5xdWVycnksIDE1MCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5xdWVycnkoKTsKICAgICAgfQogICAgfSwKICAgIHF1ZXJyeTogZnVuY3Rpb24gcXVlcnJ5KCkgewogICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaW5wdXQtZmlsZSIpLmNsaWNrKCk7CiAgICB9LAogICAgZXhwb3J0RGF0YTogZnVuY3Rpb24gZXhwb3J0RGF0YShldmVudCkgewogICAgICBpZiAoIWV2ZW50LmN1cnJlbnRUYXJnZXQuZmlsZXMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgdGhhdCA9IHRoaXM7IC8vIOaLv+WPluaWh+S7tuWvueixoQoKICAgICAgdmFyIGYgPSBldmVudC5jdXJyZW50VGFyZ2V0LmZpbGVzWzBdOyAvLyDnlKhGaWxlUmVhZGVy5p2l6K+75Y+WCgogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsgLy8g6YeN5YaZRmlsZVJlYWRlcuS4iueahHJlYWRBc0JpbmFyeVN0cmluZ+aWueazlQoKICAgICAgRmlsZVJlYWRlci5wcm90b3R5cGUucmVhZEFzQmluYXJ5U3RyaW5nID0gZnVuY3Rpb24gKGYpIHsKICAgICAgICB2YXIgYmluYXJ5ID0gIiI7CiAgICAgICAgdmFyIHdiOyAvLyDor7vlj5blrozmiJDnmoTmlbDmja4KCiAgICAgICAgdmFyIG91dGRhdGE7IC8vIOS9oOmcgOimgeeahOaVsOaNrgoKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAvLyDor7vlj5bmiJBVaW50OEFycmF577yM5YaN6L2s5o2i5Li6VW5pY29kZee8luegge+8iFVuaWNvZGXljaDkuKTkuKrlrZfoioLvvIkKICAgICAgICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KHJlYWRlci5yZXN1bHQpOwogICAgICAgICAgdmFyIGxlbmd0aCA9IGJ5dGVzLmJ5dGVMZW5ndGg7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICBiaW5hcnkgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSk7CiAgICAgICAgICB9IC8vIOaOpeS4i+adpeWwseaYr3hsc3jkuobvvIzlhbfkvZPlj6/nnIthcGkKCgogICAgICAgICAgd2IgPSBYTFNYLnJlYWQoYmluYXJ5LCB7CiAgICAgICAgICAgIHR5cGU6ICJiaW5hcnkiCiAgICAgICAgICB9KTsKICAgICAgICAgIG91dGRhdGEgPSBYTFNYLnV0aWxzLnNoZWV0X3RvX2pzb24od2IuU2hlZXRzW3diLlNoZWV0TmFtZXNbMF1dKTsgLy8g6Ieq5a6a5LmJ5pa55rOV5ZCR54i257uE5Lu25Lyg6YCS5pWw5o2uCgogICAgICAgICAgdGhhdC4kZW1pdCgiZ2V0UmVzdWx0Iiwgb3V0ZGF0YSk7CiAgICAgICAgfTsKCiAgICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGYpOwogICAgICB9OwoKICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmKTsKICAgICAgdGhpcy5pc1Nob3cgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["inputExcel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,OAAA,IAAA,MAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,MADA;AAEA,eAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAEA,UAAA,KAAA,MAAA,KAAA,KAAA,EAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA,QAAA,UAAA,CAAA,KAAA,MAAA,EAAA,GAAA,CAAA;AACA,OAHA,MAGA;AACA,aAAA,MAAA;AACA;AAEA,KAVA;AAYA,IAAA,MAZA,oBAYA;AAEA,MAAA,QAAA,CAAA,aAAA,CAAA,aAAA,EAAA,KAAA;AACA,KAfA;AAgBA,IAAA,UAhBA,sBAgBA,KAhBA,EAgBA;AAEA,UAAA,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA,IAAA,CALA,CAMA;;AACA,UAAA,CAAA,GAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAPA,CAQA;;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA,CATA,CAUA;;AACA,MAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,EAAA;AACA,YAAA,EAAA,CAFA,CAEA;;AACA,YAAA,OAAA,CAHA,CAGA;;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA;AACA,cAAA,KAAA,GAAA,IAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,cAAA,MAAA,GAAA,KAAA,CAAA,UAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,IAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WANA,CAOA;;;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAAA,CAAA;AAGA,UAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAXA,CAYA;;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,OAAA;AACA,SAdA;;AAeA,QAAA,MAAA,CAAA,iBAAA,CAAA,CAAA;AACA,OArBA;;AAsBA,MAAA,MAAA,CAAA,kBAAA,CAAA,CAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA;AAnDA;AAXA,CAAA","sourcesContent":["<template>\n  <span>\n    <input v-if=\"isShow\" class=\"input-file\" type=\"file\" @change=\"exportData\"\n           accept=\".xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"/>\n    <Button type=\"success\" icon=\"md-arrow-round-down\" @click=\"btnClick\">{{btnName}}</Button>\n  </span>\n</template>\n\n<script>\nimport XLSX from 'xlsx'\n\nexport default {\n  name: \"inputExcel\",\n  props: {\n    btnName: String,\n    default: \"选择excel文件\"\n  },\n  data() {\n    return {\n      isShow: true\n    }\n  },\n  methods: {\n    btnClick() {\n\n      if (this.isShow === false) {\n        this.isShow = true\n        setTimeout(this.querry, 150)\n      } else {\n        this.querry()\n      }\n\n    },\n\n    querry() {\n\n      document.querySelector(\".input-file\").click();\n    },\n    exportData(event) {\n\n      if (!event.currentTarget.files.length) {\n        return;\n      }\n      const that = this;\n      // 拿取文件对象\n      var f = event.currentTarget.files[0];\n      // 用FileReader来读取\n      var reader = new FileReader();\n      // 重写FileReader上的readAsBinaryString方法\n      FileReader.prototype.readAsBinaryString = function (f) {\n        var binary = \"\";\n        var wb; // 读取完成的数据\n        var outdata; // 你需要的数据\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          // 读取成Uint8Array，再转换为Unicode编码（Unicode占两个字节）\n          var bytes = new Uint8Array(reader.result);\n          var length = bytes.byteLength;\n          for (var i = 0; i < length; i++) {\n            binary += String.fromCharCode(bytes[i]);\n          }\n          // 接下来就是xlsx了，具体可看api\n          wb = XLSX.read(binary, {\n            type: \"binary\"\n          });\n          outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n          // 自定义方法向父组件传递数据\n          that.$emit(\"getResult\", outdata);\n        };\n        reader.readAsArrayBuffer(f);\n      };\n      reader.readAsBinaryString(f);\n      this.isShow = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.input-file {\n  display: none;\n}\n</style>\n"],"sourceRoot":"src/views/components/input-excel"}]}