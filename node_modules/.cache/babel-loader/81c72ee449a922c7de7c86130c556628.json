{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js!/Users/zhang/canteen_manage/src/store/modules/role.js","dependencies":[{"path":"/Users/zhang/canteen_manage/src/store/modules/role.js","mtime":1638516298152},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAqIGFzIHJvbGUgZnJvbSAnQC9hcGkvcm9sZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogewogICAgcm9sZUxpc3Q6IHt9LAogICAgcm9sZUdvb2RzTGlzdDoge30sCiAgICByb2xlTGlzdExvYWRpbmc6IGZhbHNlLAogICAgYWRkTW9kYWw6IGZhbHNlLAogICAgcm9sZUdvb2RzTW9kYWw6IGZhbHNlLAogICAgZWRpdE1vZGFsOiBmYWxzZSwKICAgIGN1cnJlbnREYXRhOiB7fSwKICAgIGN1cnJlbnRSb2xlR29vZHNEYXRhOiB7fQogIH0sCiAgZ2V0dGVyczoge30sCiAgbXV0YXRpb25zOiB7CiAgICBVcGRhdGVSb2xlTGlzdDogZnVuY3Rpb24gVXBkYXRlUm9sZUxpc3Qoc3RhdGUsIHZhbCkgewogICAgICBzdGF0ZS5yb2xlTGlzdCA9IHZhbDsKICAgIH0sCiAgICBVcGRhdGVSb2xlR29vZHNMaXN0OiBmdW5jdGlvbiBVcGRhdGVSb2xlR29vZHNMaXN0KHN0YXRlLCB2YWwpIHsKICAgICAgc3RhdGUucm9sZUdvb2RzTGlzdCA9IHZhbDsKICAgIH0sCiAgICBTRVRST0xFQ1VSUkVOVERBVEE6IGZ1bmN0aW9uIFNFVFJPTEVDVVJSRU5UREFUQShzdGF0ZSwgdmFsKSB7CiAgICAgIHN0YXRlLmN1cnJlbnREYXRhID0gdmFsOwogICAgfSwKICAgIFNFVFJPTEVHT09EU0NVUlJFTlREQVRBOiBmdW5jdGlvbiBTRVRST0xFR09PRFNDVVJSRU5UREFUQShzdGF0ZSwgdmFsKSB7CiAgICAgIHN0YXRlLmN1cnJlbnRSb2xlR29vZHNEYXRhID0gdmFsOwogICAgfSwKICAgIHNldEFkZFJvbGVNb2RhbDogZnVuY3Rpb24gc2V0QWRkUm9sZU1vZGFsKHN0YXRlLCB2YWwpIHsKICAgICAgc3RhdGUuYWRkTW9kYWwgPSB2YWw7CiAgICB9LAogICAgc2V0RWRpdFJvbGVNb2RhbDogZnVuY3Rpb24gc2V0RWRpdFJvbGVNb2RhbChzdGF0ZSwgdmFsKSB7CiAgICAgIHN0YXRlLmVkaXRNb2RhbCA9IHZhbDsKICAgIH0sCiAgICBzZXRSb2xlR29vZHNNb2RhbDogZnVuY3Rpb24gc2V0Um9sZUdvb2RzTW9kYWwoc3RhdGUsIHZhbCkgewogICAgICBzdGF0ZS5yb2xlR29vZHNNb2RhbCA9IHZhbDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vIOiOt+WPluS6uuWRmOexu+Wei+WIl+ihqAogICAgcm9sZUxpc3Q6IGZ1bmN0aW9uIHJvbGVMaXN0KF9yZWYsIGRhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHJvbGUucm9sZUxpc3QoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb21taXQoJ1RBQkxFX0xPQURJTkcnLCBmYWxzZSk7CiAgICAgICAgICBjb21taXQoJ1VwZGF0ZVJvbGVMaXN0JywgcmVzLmRhdGEpOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzKTsKICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICBjb21taXQoJ1RBQkxFX0xPQURJTkcnLCBmYWxzZSk7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5L+u5pS55Lq65ZGY57G75Z6LCiAgICByb2xlRWRpdDogZnVuY3Rpb24gcm9sZUVkaXQoX3JlZjIsIGRhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICByb2xlLnJvbGVFZGl0KGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzKTsKICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5re75Yqg5Lq65ZGY57G75Z6LCiAgICByb2xlQWRkOiBmdW5jdGlvbiByb2xlQWRkKF9yZWYzLCBkYXRhKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgcm9sZS5yb2xlQWRkKGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzKTsKICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6YWN572u5Lq65ZGY57G75Z6L6aSQ56eNCiAgICBzZXRSb2xlR29vZHM6IGZ1bmN0aW9uIHNldFJvbGVHb29kcyhfcmVmNCwgZGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHJvbGUuc2V0Um9sZUdvb2RzKGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzKTsKICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5Lq65ZGY57G75Z6L6aSQ56eN5YiX6KGoCiAgICBnZXRSb2xlR29vZHNMaXN0OiBmdW5jdGlvbiBnZXRSb2xlR29vZHNMaXN0KF9yZWY1LCBkYXRhKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgcm9sZS5nZXRSb2xlR29vZHNMaXN0KGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgY29tbWl0KCdVcGRhdGVSb2xlR29vZHNMaXN0JywgcmVzLmRhdGEpOwogICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzKTsKICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/zhang/canteen_manage/src/store/modules/role.js"],"names":["role","state","roleList","roleGoodsList","roleListLoading","addModal","roleGoodsModal","editModal","currentData","currentRoleGoodsData","getters","mutations","UpdateRoleList","val","UpdateRoleGoodsList","SETROLECURRENTDATA","SETROLEGOODSCURRENTDATA","setAddRoleModal","setEditRoleModal","setRoleGoodsModal","actions","data","commit","Promise","resolve","reject","then","res","err","roleEdit","roleAdd","setRoleGoods","getRoleGoodsList"],"mappings":";AACA,OAAO,KAAKA,IAAZ,MAAsB,YAAtB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAC;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,aAAa,EAAE,EAFX;AAGJC,IAAAA,eAAe,EAAE,KAHb;AAIJC,IAAAA,QAAQ,EAAE,KAJN;AAKJC,IAAAA,cAAc,EAAE,KALZ;AAMJC,IAAAA,SAAS,EAAE,KANP;AAOJC,IAAAA,WAAW,EAAE,EAPT;AAQJC,IAAAA,oBAAoB,EAAE;AARlB,GADO;AAWbC,EAAAA,OAAO,EAAE,EAXI;AAabC,EAAAA,SAAS,EAAC;AACRC,IAAAA,cADQ,0BACOX,KADP,EACcY,GADd,EACmB;AACzBZ,MAAAA,KAAK,CAACC,QAAN,GAAiBW,GAAjB;AACD,KAHO;AAIRC,IAAAA,mBAJQ,+BAIYb,KAJZ,EAImBY,GAJnB,EAIwB;AAC9BZ,MAAAA,KAAK,CAACE,aAAN,GAAsBU,GAAtB;AACD,KANO;AAORE,IAAAA,kBAPQ,8BAOWd,KAPX,EAOkBY,GAPlB,EAOsB;AAC5BZ,MAAAA,KAAK,CAACO,WAAN,GAAoBK,GAApB;AACD,KATO;AAURG,IAAAA,uBAVQ,mCAUgBf,KAVhB,EAUuBY,GAVvB,EAU2B;AACjCZ,MAAAA,KAAK,CAACQ,oBAAN,GAA6BI,GAA7B;AACD,KAZO;AAaRI,IAAAA,eAbQ,2BAaQhB,KAbR,EAaeY,GAbf,EAamB;AACzBZ,MAAAA,KAAK,CAACI,QAAN,GAAiBQ,GAAjB;AACD,KAfO;AAgBRK,IAAAA,gBAhBQ,4BAgBSjB,KAhBT,EAgBgBY,GAhBhB,EAgBoB;AAC1BZ,MAAAA,KAAK,CAACM,SAAN,GAAkBM,GAAlB;AACD,KAlBO;AAmBRM,IAAAA,iBAnBQ,6BAmBUlB,KAnBV,EAmBiBY,GAnBjB,EAmBqB;AAC3BZ,MAAAA,KAAK,CAACK,cAAN,GAAuBO,GAAvB;AACD;AArBO,GAbG;AAoCbO,EAAAA,OAAO,EAAC;AACN;AACAlB,IAAAA,QAFM,0BAEemB,IAFf,EAEqB;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AACzB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,QAAAA,IAAI,CAACE,QAAL,CAAcmB,IAAd,EAAoBK,IAApB,CAAyB,UAACC,GAAD,EAAS;AAChCL,UAAAA,MAAM,CAAC,eAAD,EAAkB,KAAlB,CAAN;AACAA,UAAAA,MAAM,CAAC,gBAAD,EAAmBK,GAAG,CAACN,IAAvB,CAAN;AACA,iBAAOG,OAAO,CAACG,GAAD,CAAd;AACD,SAJD,WAKS,UAACC,GAAD,EAAS;AACdN,UAAAA,MAAM,CAAC,eAAD,EAAkB,KAAlB,CAAN;AACAG,UAAAA,MAAM,CAACG,GAAD,CAAN;AACD,SARH;AASD,OAVM,CAAP;AAWD,KAdK;AAeN;AACAC,IAAAA,QAhBM,2BAgBeR,IAhBf,EAgBqB;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AACzB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,QAAAA,IAAI,CAAC6B,QAAL,CAAcR,IAAd,EAAoBK,IAApB,CAAyB,UAACC,GAAD,EAAS;AAChC,iBAAOH,OAAO,CAACG,GAAD,CAAd;AACD,SAFD,WAGS,UAACC,GAAD,EAAS;AACdH,UAAAA,MAAM,CAACG,GAAD,CAAN;AACD,SALH;AAMD,OAPM,CAAP;AAQD,KAzBK;AA0BN;AACAE,IAAAA,OA3BM,0BA2BcT,IA3Bd,EA2BoB;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AACxB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,QAAAA,IAAI,CAAC8B,OAAL,CAAaT,IAAb,EAAmBK,IAAnB,CAAwB,UAACC,GAAD,EAAS;AAC/B,iBAAOH,OAAO,CAACG,GAAD,CAAd;AACD,SAFD,WAGS,UAACC,GAAD,EAAS;AACdH,UAAAA,MAAM,CAACG,GAAD,CAAN;AACD,SALH;AAMD,OAPM,CAAP;AAQD,KApCK;AAqCN;AACAG,IAAAA,YAtCM,+BAsCmBV,IAtCnB,EAsCyB;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AAC7B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,QAAAA,IAAI,CAAC+B,YAAL,CAAkBV,IAAlB,EAAwBK,IAAxB,CAA6B,UAACC,GAAD,EAAS;AACpC,iBAAOH,OAAO,CAACG,GAAD,CAAd;AACD,SAFD,WAGS,UAACC,GAAD,EAAS;AACdH,UAAAA,MAAM,CAACG,GAAD,CAAN;AACD,SALH;AAMD,OAPM,CAAP;AAQD,KA/CK;AAgDN;AACAI,IAAAA,gBAjDM,mCAiDuBX,IAjDvB,EAiD6B;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AACjC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,QAAAA,IAAI,CAACgC,gBAAL,CAAsBX,IAAtB,EAA4BK,IAA5B,CAAiC,UAACC,GAAD,EAAS;AACxCL,UAAAA,MAAM,CAAC,qBAAD,EAAwBK,GAAG,CAACN,IAA5B,CAAN;AACA,iBAAOG,OAAO,CAACG,GAAD,CAAd;AACD,SAHD,WAIS,UAACC,GAAD,EAAS;AACdH,UAAAA,MAAM,CAACG,GAAD,CAAN;AACD,SANH;AAOD,OARM,CAAP;AASD;AA3DK;AApCK,CAAf","sourcesContent":["\nimport * as role from '@/api/role';\n\nexport default {\n  state:{\n    roleList: {},\n    roleGoodsList: {},\n    roleListLoading: false,\n    addModal: false,\n    roleGoodsModal: false,\n    editModal: false,\n    currentData: {},\n    currentRoleGoodsData: {},\n  },\n  getters: {\n  },\n  mutations:{\n    UpdateRoleList(state, val) {\n      state.roleList = val;\n    },\n    UpdateRoleGoodsList(state, val) {\n      state.roleGoodsList = val;\n    },\n    SETROLECURRENTDATA(state, val){\n      state.currentData = val;\n    },\n    SETROLEGOODSCURRENTDATA(state, val){\n      state.currentRoleGoodsData = val;\n    },\n    setAddRoleModal(state, val){\n      state.addModal = val\n    },\n    setEditRoleModal(state, val){\n      state.editModal = val\n    },\n    setRoleGoodsModal(state, val){\n      state.roleGoodsModal = val\n    }\n  },\n  actions:{\n    // 获取人员类型列表\n    roleList({ commit }, data) {\n      return new Promise((resolve, reject) => {\n        role.roleList(data).then((res) => {\n          commit('TABLE_LOADING', false);\n          commit('UpdateRoleList', res.data)\n          return resolve(res);\n        })\n          .catch((err) => {\n            commit('TABLE_LOADING', false);\n            reject(err);\n          });\n      });\n    },\n    // 修改人员类型\n    roleEdit({ commit }, data) {\n      return new Promise((resolve, reject) => {\n        role.roleEdit(data).then((res) => {\n          return resolve(res);\n        })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n    // 添加人员类型\n    roleAdd({ commit }, data) {\n      return new Promise((resolve, reject) => {\n        role.roleAdd(data).then((res) => {\n          return resolve(res);\n        })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n    // 配置人员类型餐种\n    setRoleGoods({ commit }, data) {\n      return new Promise((resolve, reject) => {\n        role.setRoleGoods(data).then((res) => {\n          return resolve(res);\n        })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n    // 获取人员类型餐种列表\n    getRoleGoodsList({ commit }, data) {\n      return new Promise((resolve, reject) => {\n        role.getRoleGoodsList(data).then((res) => {\n          commit('UpdateRoleGoodsList', res.data)\n          return resolve(res);\n        })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n  }\n}\n\n"]}]}