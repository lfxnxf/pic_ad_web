{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/views/statistics/stat-home/components/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/views/statistics/stat-home/components/table.vue","mtime":1638516298164},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"table.vue","sourceRoot":"src/views/statistics/stat-home/components","sourcesContent":["<!--  -->\n<template>\n\n  <div class=\"card\">\n    <div class=\"no-print\">\n      <Button class=\"pull-right margin-top-20\" type='primary' ghost icon=\"md-download\" @click=\"exportResultExcel\">导出EXCEL</Button>\n      <Button class=\"pull-right margin-right-10 margin-top-20\" type='success' ghost icon=\"md-stats\" :loading=\"loading2\" @click=\"exportResultPdf\">导出PDF</Button>\n      <Button class=\"pull-right margin-right-10 margin-top-20\" type='success' ghost icon=\"md-print\" @click=\"printContext\">打印</Button>\n      <!--      <Button class=\"pull-right margin-right-10\" type='success' ghost icon=\"md-print\"  v-print=\"printStat\">打印</Button>-->\n    </div>\n    <div ref=\"print\" id=\"statPrint\" class=\"padding-top-20\">\n<!--      <div class=\"margin-bottom-10 clearfix\" style=\"color: #666;line-height:32px\">就餐报表-->\n<!--        <span class=\"padding-left-15 padding-right-15\">就餐日期：{{ start }} - {{ end }}</span>-->\n<!--        <span v-if=\"keyName=='role'\">人员类型选择：</span>-->\n<!--        <span v-if=\"keyName=='department'\">部门选择：</span>-->\n<!--        <span>{{ values }}</span>-->\n\n<!--      </div>-->\n\n      <Table border size=\"small\" :row-class-name=\"rowClassName\" :columns='statisticsResult.appointment.table_head' :data='statisticsResult.appointment.result' :loading=\"loading\">\n        <template slot=\"counts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.count }}</span>\n        </template>\n        <template slot=\"amounts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.amount }}</span>\n        </template>\n      </Table>\n\n      <Table border size=\"small\" :row-class-name=\"rowClassName\" :columns='statisticsResult.order.table_head' :data='statisticsResult.order.result' :loading=\"loading\">\n        <template slot=\"counts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.count }}</span>\n        </template>\n        <template slot=\"amounts\" slot-scope=\"{ row }\">\n          <span class=\"red-color\">{{ row.amount }}</span>\n        </template>\n      </Table>\n\n    </div>\n\n  </div>\n</template>\n<script>\nimport _ from 'underscore';\nimport excel from '@/libs/excel';\nimport * as dataConfig from '../dataConfig';\nimport {ExportSavePdf, previewImg, getTreeNodes, getTreeNodeItem} from \"@/libs/util\";\nimport moment from \"moment-timezone\";\nexport default {\n  name: 'SearchTable',\n  props: {\n    startDate: String,\n    endDate: String,\n    values: String,\n    keyName: String,\n    formData: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      start: this.startDate,\n      end: this.endDate,\n      role: this.roleIds,\n      columns: [],\n      loading2: false,\n    };\n  },\n\n  watch: {\n    'startDate' : function(val){\n      this.start = val;\n    },\n    'endDate' : function(val){\n      this.end = val;\n    },\n    'roleIds' : function(val){\n      this.role = val;\n    }\n  },\n\n  components: {},\n\n  computed: {\n    reportStatistics() {\n      return this.$store.state.statistics.reportStatistics;\n    },\n    statisticsResult() {\n      return this.$store.state.statistics.statHome;\n    },\n    loading() {\n      return this.$store.state.app.tableLoading;\n    },\n    getMerchantDepartmentList() {\n      return this.$store.state.user.merchantDepartmentList;\n    },\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      this.columns = dataConfig.columns;\n    },\n    printContext () {\n      this.$print(this.$refs.print);\n      // 不打印方法1. 添加no-print样式类\n      // 不打印方法2. this.$print(this.$refs.print,{'no-print':'.do-not-print-div'})\n    },\n\n    rowClassName (row, index) {\n      let valueArr = _.values(row);\n      if (_.indexOf(valueArr,\"当日小计\") != -1){\n        return 'demo-table-info-row';\n      } else if (_.indexOf(valueArr,\"合计\") != -1) {\n        return 'demo-table-error-row';\n      }\n\n      return '';\n    },\n    // 导出PDF文件\n    exportResultPdf: function () {\n      this.loading2 = true;\n      let fileType = '人员类型';\n      if (this.keyName == 'department'){\n        fileType = '部门';\n      }\n      if (this.keyName == 'device'){\n        fileType = '设备';\n      }\n      if (this.keyName == 'user_group'){\n        fileType = '职务';\n      }\n      let pdfName = '就餐报表' + '_' + fileType + '_' + this.startDate + '-' + this.endDate;\n      let nowTime= moment().format('YYYY-MM-DD');\n\n      ExportSavePdf(document.querySelector('#statPrint'), pdfName, nowTime, 'l');\n      this.loading2 = false;\n    },\n\n    // 导出EXCEL\n    exportExcel: function() {\n      try {\n        if (this.columns.length>0) {\n          let fileType = '人员类型';\n          if (this.keyName == 'department'){\n            fileType = '部门';\n          }\n          if (this.keyName == 'device'){\n            fileType = '设备';\n          }\n          if (this.keyName == 'user_group'){\n            fileType = '职务';\n          }\n          let filename = '就餐报表' + '_' + fileType + '_' + this.startDate + '-' + this.endDate;\n          let key = [];\n          for(let item of this.columns){\n            let tmp = ''\n            tmp = item.key? item.key: item.slot;\n            if (tmp=='counts'){\n              tmp = 'count';\n            }\n            if (tmp=='amounts'){\n              tmp = 'amount';\n            }\n            key.push(tmp);\n          }\n          const params = {\n            title: _.pluck(this.columns, 'title'),\n            // key: _.pluck(this.columns, 'key'),\n            key: key,\n            data: this.reportStatistics,\n            autoWidth: true,\n            filename: filename,\n          };\n          excel.export_array_to_excel(params);\n        } else {\n          this.$Message.info('表格数据不能为空！');\n        }\n      } catch (e) {\n        console.log(e);\n        // this.$store.commit('STAT_DAY_SET_PROPERTY_BY_KEY', { key: 'exportLoading', value: false })\n      }\n    },\n\n    // 导出\n    exportResultExcel: function() {\n      try {\n        if (this.statisticsResult.table_head.length>0) {\n          let fileType = '人员类型';\n          if (this.keyName == 'department'){\n            fileType = '部门';\n          }\n          if (this.keyName == 'device'){\n            fileType = '设备';\n          }\n          if (this.keyName == 'user_group'){\n            fileType = '职务';\n          }\n          let filename = '就餐报表' + '_' + fileType + '_' + this.startDate + '-' + this.endDate;\n          let key = [];\n          for(let item of this.statisticsResult.table_head){\n            let tmp = ''\n            tmp = item.key? item.key: item.slot;\n            if (tmp=='counts'){\n              tmp = 'count';\n            }\n            if (tmp=='amounts'){\n              tmp = 'amount';\n            }\n            key.push(tmp);\n          }\n\n          //设置主标题样式\n          let headerStyle = {\n            font: {\n              name: \"宋体\",\n              sz: 14,\n              color: { rgb: \"000000\" },\n              bold: true\n              // italic: false,\n              // underline: false\n            },\n            alignment: {\n              horizontal: \"center\",\n              vertical: \"center\"\n            },\n            fill: {\n              fgColor: {rgb: \"87CEFA\"},\n            },\n            // 单元格边框\n            border: {\n              top: {\n                style: 'thin'\n              },\n              bottom: {\n                style: 'thin'\n              },\n              left: {\n                style: 'thin'\n              },\n              right: {\n                style: 'thin'\n              }\n            }\n          };\n          //设置主标题样式\n          let bodyStyle = {\n            font: {\n              // name: \"宋体\",\n              // sz: 18,\n              color: { rgb: \"000000\" },\n              bold: true\n              // italic: false,\n              // underline: false\n            },\n            alignment: {\n              horizontal: \"center\",\n              vertical: \"center\"\n            },\n\n            // fill: {\n            //   fgColor: {rgb: \"008000\"},\n            // },\n\n            // 单元格边框\n            border: {\n              top: {\n                style: 'thin'\n              },\n              bottom: {\n                style: 'thin'\n              },\n              left: {\n                style: 'thin'\n              },\n              right: {\n                style: 'thin'\n              }\n            }\n          };\n          const params = {\n            title: _.pluck(this.statisticsResult.table_head, 'title'),\n            // key: _.pluck(this.columns, 'key'),\n            key: key,\n            data: this.statisticsResult.result,\n            autoWidth: true,\n            filename: filename,\n            headerStyle: headerStyle,\n            bodyStyle: bodyStyle,\n          };\n\n          excel.export_array_to_excel_style(params);\n        } else {\n          this.$Message.info('表格数据不能为空！');\n        }\n      } catch (e) {\n        console.log(e);\n        // this.$store.commit('STAT_DAY_SET_PROPERTY_BY_KEY', { key: 'exportLoading', value: false })\n      }\n    },\n\n    handleLoadData: async function (item, callback) {\n      // console.log(\"handleLoadData---item>>>\" + JSON.stringify(item));\n      let itemData = getTreeNodeItem(this.getMerchantDepartmentList,'department_id', 'children', item.key_100);\n      // console.log(\"handleLoadData---find itemData equals>>>\" + JSON.stringify(itemData));\n      let level = 0;\n      if (itemData.length > 0){\n        if (itemData[0].children.length > 0){\n          level = itemData[0].level + 1;\n        }\n      }\n\n      let departArray = getTreeNodes(itemData, 'department_id', 'children');\n      let arrayResult = departArray.join(',');\n      // console.log(\"handleLoadData---arrayResult>>>\" + arrayResult);\n\n      let data = await this.queryChildStat(item, arrayResult, level);\n      // console.log(\"handleLoadData---data>>>\" + JSON.stringify(data));\n      callback(data);\n    },\n\n    queryChildStat: async function(item, value, level) {\n      // console.log(\"queryChildStat---item>>>\" + JSON.stringify(item));\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        unit: this.formData.unit,\n        start: item.key_1,\n        end: item.key_1,\n        key: this.formData.key,\n        value: value,\n        level: level,\n        format: 1,\n\n      };\n      // console.log(\"queryChildStat---params>>>>\" + JSON.stringify(params));\n      let res = await this.$store.dispatch('statisticsSale', params);\n      // console.log(\"queryChildStat---res>>>>\" + JSON.stringify(res));\n      return res.result;\n\n    },\n\n\n  }\n}\n</script>\n<style lang='less' scoped>\n/deep/.ivu-table-border td,.ivu-table-border th{\n  border-color: #dcdee2;\n}\n/deep/.ivu-table-wrapper{\n  width: 100%;\n  // max-width: 1040px;\n  overflow-x: auto;\n}\n/deep/.ivu-table {\n  width: 100%;\n  border-bottom: 1px solid #dcdee2;\n  .ivu-table-cell {\n    padding-left: 5px;\n    padding-right: 10px;\n  }\n  .demo-table-info-row td{\n    background-color: #e8eaec;\n    font-weight: 700;\n  }\n  .demo-table-error-row td{\n    background-color: #27a163;\n    color: #fff;\n    font-weight: 700;\n  }\n\n}\n@media print {\n  #statPrint{\n    /deep/.ivu-table{\n      width: 100%;\n      // border-right:2px solid #dcdee2;\n    }\n    /deep/.ivu-table-small td {\n      height: 30px;\n      line-height: 1.2;\n      color: #333;\n      font-size: 12px;\n\n    }\n    /deep/.ivu-table-small th {\n      font-weight: 400;\n      font-size: 30px;\n\n    }\n\n  }\n}\n\n\n</style>\n"]}]}