{"remainingRequest":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/工作/pic_ad/src/components/department-tree/department-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhang/工作/pic_ad/src/components/department-tree/department-tree.vue","mtime":1644998572156},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhang/工作/pic_ad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/工作/pic_ad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ3VuZGVyc2NvcmUnOwppbXBvcnQge2J1aWxkQ2hpbGREZXBhcnRtZW50QXJyYXksIGJ1aWxkRGVwYXJ0bWVudFRyZWUsIGJ1aWxkVHJlZX0gZnJvbSAiQC9saWJzL3V0aWwiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICB0aW1lczogMCwKICAgICAgdGltZXI6IG51bGwsCiAgICAgIHRyZWVEYXRhOiBbXQogICAgfTsKICB9LAoKICBjb21wb25lbnRzOiB7fSwKCiAgY29tcHV0ZWQ6IHsKICAgIGRlcGFydG1lbnRMaXN0KCl7CiAgICAgIGxldCBkZXBhcnRtZW50cyA9IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIubWVyY2hhbnREZXBhcnRtZW50TGlzdDsKICAgICAgaWYgKGRlcGFydG1lbnRzLmxlbmd0aCA9PSAwKXsKICAgICAgICB0aGlzLnRpbWVzKysgOwoKICAgICAgICBpZiAodGhpcy50aW1lcyA+IDUpewogICAgICAgICAgLy8gY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpOwogICAgICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICB0aGF0LmdldERlcGFydG1lbnRMaXN0KCk7CiAgICAgICAgICB9LDMwMDApOwogICAgICAgIH0KICAgICAgICBlbHNlewogICAgICAgICAgdGhpcy5nZXREZXBhcnRtZW50TGlzdCgpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIubWVyY2hhbnREZXBhcnRtZW50TGlzdDsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICAvL+iOt+WPlumDqOmXqOWIl+ihqAogICAgZ2V0RGVwYXJ0bWVudExpc3Q6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIG1lcmNoYW50X2lkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmN1ck1lcmNoYW50SWQsCiAgICAgICAgbGV2ZWw6IDEsCiAgICAgIH07CgogICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldE1lcmNoYW50RGVwYXJ0bWVudExpc3QnLCBwYXJhbXMpOwoKICAgICAgaWYgKHJlcy5kYXRhLmxlbmd0aCA+IDApewogICAgICAgIHRoaXMudGltZXMgPSAwOwogICAgICB9CgogICAgICAvLyBjb25zb2xlLmxvZygiZ2V0RGVwYXJ0bWVudExpc3Q9PT10aW1lcz4+PiIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLnRpbWVzKSkKCiAgICAgIC8vIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnZXRNZXJjaGFudERlcGFydG1lbnRMaXN0JywgcGFyYW1zKS50aGVuKHJlcz0+ewogICAgICAvLyAgIGlmKHJlcy5yZXR1cm5fY29kZT09MCl7CiAgICAgIC8vICAgICB0aGlzLnRyZWVEYXRhID0gcmVzLmRhdGE7CiAgICAgIC8vICAgfQogICAgICAvLyB9KS5jYXRjaChlcnI9PnsKICAgICAgLy8KICAgICAgLy8gfSk7CiAgICB9LAoKICAgIC8vIC8v6I635Y+W6YOo6Zeo5YiX6KGoCiAgICAvLyBxdWVyeURlcGFydG1lbnQ6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICBsZXQgcGFyYW1zID0gewogICAgLy8gICAgIG9yZ19pZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlci5jdXJPcmdJZCwKICAgIC8vICAgICBzZXNzaW9uaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudG9rZW4sCiAgICAvLyAgICAgbGltaXQ6IDIwMDAKICAgIC8vICAgfTsKICAgIC8vICAgcmV0dXJuIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdkZXBhcnRtZW50TGlzdCcsIHBhcmFtcyk7CiAgICAvLyB9LAogICAgLy8KICAgIC8vIC8v6I635Y+W6K+l6aOf5aCC5ZWG5oi35LiL5omA5pyJ5a2Q6YOo6Zeo5YiX6KGoCiAgICAvLyBxdWVyeUNoaWxkRGVwYXJ0bWVudDogYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgIGxldCBwYXJhbXMgPSB7CiAgICAvLyAgICAgbWVyY2hhbnRfaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuY3VyTWVyY2hhbnRJZCwKICAgIC8vICAgfTsKICAgIC8vICAgcmV0dXJuIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1c2VyQ2hpbGREZXBhcnRtZW50JywgcGFyYW1zKTsKICAgIC8vIH0sCiAgICAvLyAgICAvL+iOt+WPluW9k+WJjemjn+WgguWVhuaIt+eahOmDqOmXqOagkQogICAgLy8gZ2V0TWVyY2hhbnREZXBhcnRtZW50OiBhc3luYyBmdW5jdGlvbigpIHsKICAgIC8vICAgbGV0IGRlcGFydFRyZWUgPSBidWlsZERlcGFydG1lbnRUcmVlKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckNoaWxkRGVwYXJ0bWVudExpc3QsdGhpcy4kc3RvcmUuc3RhdGUudXNlci5lbXBEZXBhcnRtZW50TGlzdCk7CiAgICAvLyAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnVXBkYXRlRGVwYXJ0bWVudExpc3QnLCBkZXBhcnRUcmVlKTsKICAgIC8vICAgaWYgKGRlcGFydFRyZWUubGVuZ3RoID4gMCkgewogICAgLy8gICAgIHRoaXMudHJlZURhdGEgPSBidWlsZFRyZWUoZGVwYXJ0VHJlZSwge30sICdkZXBhcnRtZW50X2lkJywgJ3BhcmVudGlkJywgJ2NoaWxkcmVuJyk7CiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICBjaG9pY2VUcmVlKGRhdGEpewogICAgICBsZXQgY2hvaWNlc0RhdGE9dGhpcy4kcmVmcy50cmVlLmdldENoZWNrZWROb2RlcygpOyAvL+aWueazleeahOi/kOeUqCBnZXRTZWxlY3RlZE5vZGVz5Lmf5piv5aaC5q2k55So5rOVCiAgICAgIGxldCBkZXBhcnRtZW50cyA9IF8ucGx1Y2soY2hvaWNlc0RhdGEsICdkZXBhcnRtZW50X2lkJyk7CiAgICAgIHRoaXMuJGVtaXQoJ2Zvcm1EZXBhcnRtZW50cycsIGRlcGFydG1lbnRzKTsKICAgIH0sCgogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLmdldERlcGFydG1lbnRMaXN0KCk7CiAgfSwKCiAgLy8gY3JlYXRlZCgpewogIC8vICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHsKICAvLyAgICAgbGV0IHNlbGYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHJlZScpOwogIC8vICAgICBpZighc2VsZi5jb250YWlucyhlLnRhcmdldCkpewogIC8vICAgICAgIHRoaXMudHJlZURhdGFbMF1bJ2V4cGFuZCddID0gZmFsc2U7CiAgLy8gICAgIH0KICAvLyAgIH0pCiAgLy8gfSwKICBkZXN0cm95ZWQoKXsKICAgIC8vIHRoaXMudHJlZURhdGFbMF1bJ2V4cGFuZCddID0gZmFsc2U7CiAgICB0aGlzLmRlcGFydG1lbnRMaXN0WzBdWydleHBhbmQnXSA9IGZhbHNlOwogIH0KfQoK"},{"version":3,"sources":["department-tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"department-tree.vue","sourceRoot":"src/components/department-tree","sourcesContent":["<!-- 部门树 -->\n<template>\n  <div >\n    <!-- <Tree id=\"tree\" :data=\"treeData\" @on-check-change=\"choiceTree\" ref=\"tree\" show-checkbox multiple @click.stop=\"treeData[0]['expand']=true;\"></Tree>  -->\n    <Tree\n        id=\"tree\"\n        :data=\"departmentList\"\n        @on-check-change=\"choiceTree\"\n        ref=\"tree\"\n        show-checkbox\n        empty-text=\"暂无部门数据\"\n        multiple>\n    </Tree>\n  </div>\n</template>\n\n<script>\nimport _ from 'underscore';\nimport {buildChildDepartmentArray, buildDepartmentTree, buildTree} from \"@/libs/util\";\nexport default {\n  data () {\n    return {\n      times: 0,\n      timer: null,\n      treeData: []\n    };\n  },\n\n  components: {},\n\n  computed: {\n    departmentList(){\n      let departments = this.$store.state.user.merchantDepartmentList;\n      if (departments.length == 0){\n        this.times++ ;\n\n        if (this.times > 5){\n          // clearTimeout(this.timer);\n          let that = this;\n          this.timer = setTimeout(() => {\n            that.getDepartmentList();\n          },3000);\n        }\n        else{\n          this.getDepartmentList();\n        }\n      }\n\n      return this.$store.state.user.merchantDepartmentList;\n    }\n  },\n\n  methods: {\n    //获取部门列表\n    getDepartmentList: async function() {\n      let params = {\n        merchant_id: this.$store.state.user.curMerchantId,\n        level: 1,\n      };\n\n      let res = await this.$store.dispatch('getMerchantDepartmentList', params);\n\n      if (res.data.length > 0){\n        this.times = 0;\n      }\n\n      // console.log(\"getDepartmentList===times>>>\" + JSON.stringify(this.times))\n\n      // await this.$store.dispatch('getMerchantDepartmentList', params).then(res=>{\n      //   if(res.return_code==0){\n      //     this.treeData = res.data;\n      //   }\n      // }).catch(err=>{\n      //\n      // });\n    },\n\n    // //获取部门列表\n    // queryDepartment: async function() {\n    //   let params = {\n    //     org_id: this.$store.state.user.curOrgId,\n    //     sessionid: this.$store.state.user.token,\n    //     limit: 2000\n    //   };\n    //   return await this.$store.dispatch('departmentList', params);\n    // },\n    //\n    // //获取该食堂商户下所有子部门列表\n    // queryChildDepartment: async function() {\n    //   let params = {\n    //     merchant_id: this.$store.state.user.curMerchantId,\n    //   };\n    //   return await this.$store.dispatch('userChildDepartment', params);\n    // },\n    //    //获取当前食堂商户的部门树\n    // getMerchantDepartment: async function() {\n    //   let departTree = buildDepartmentTree(this.$store.state.user.userChildDepartmentList,this.$store.state.user.empDepartmentList);\n    //   this.$store.commit('UpdateDepartmentList', departTree);\n    //   if (departTree.length > 0) {\n    //     this.treeData = buildTree(departTree, {}, 'department_id', 'parentid', 'children');\n    //   }\n    // },\n    choiceTree(data){\n      let choicesData=this.$refs.tree.getCheckedNodes(); //方法的运用 getSelectedNodes也是如此用法\n      let departments = _.pluck(choicesData, 'department_id');\n      this.$emit('formDepartments', departments);\n    },\n\n  },\n\n  mounted() {\n    // this.getDepartmentList();\n  },\n\n  // created(){\n  //   document.addEventListener('click', e => {\n  //     let self = document.getElementById('tree');\n  //     if(!self.contains(e.target)){\n  //       this.treeData[0]['expand'] = false;\n  //     }\n  //   })\n  // },\n  destroyed(){\n    // this.treeData[0]['expand'] = false;\n    this.departmentList[0]['expand'] = false;\n  }\n}\n\n</script>\n<style lang='less' scoped>\n</style>\n"]}]}