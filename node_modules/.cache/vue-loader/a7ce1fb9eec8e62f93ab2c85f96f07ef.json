{"remainingRequest":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhang/canteen_manage/src/components/enterprise-main/components/side-menu/side-menu.vue?vue&type=template&id=c5f26e48&scoped=true&","dependencies":[{"path":"/Users/zhang/canteen_manage/src/components/enterprise-main/components/side-menu/side-menu.vue","mtime":1638355006727},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhang/canteen_manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAic2lkZS1tZW51LXdyYXBwZXIiIH0sCiAgICBbCiAgICAgIF92bS5fdCgiZGVmYXVsdCIpLAogICAgICBfYygKICAgICAgICAiTWVudSIsCiAgICAgICAgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgIHZhbHVlOiAhX3ZtLmNvbGxhcHNlZCwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWNvbGxhcHNlZCIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHJlZjogIm1lbnUiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImFjdGl2ZS1uYW1lIjogX3ZtLmFjdGl2ZU5hbWUsCiAgICAgICAgICAgICJvcGVuLW5hbWVzIjogX3ZtLm9wZW5lZE5hbWVzLAogICAgICAgICAgICBhY2NvcmRpb246IF92bS5hY2NvcmRpb24sCiAgICAgICAgICAgIHRoZW1lOiBfdm0udGhlbWUsCiAgICAgICAgICAgIHdpZHRoOiAiYXV0byIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogeyAib24tc2VsZWN0IjogX3ZtLmhhbmRsZVNlbGVjdCB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfdm0uX2woX3ZtLm1lbnVMaXN0LCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgaXRlbS5jaGlsZHJlbiAmJiBpdGVtLmNoaWxkcmVuLmxlbmd0aCA9PT0gMQogICAgICAgICAgICAgICAgPyBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dDaGlsZHJlbihpdGVtKQogICAgICAgICAgICAgICAgICAgICAgPyBfYygic2lkZS1tZW51LWl0ZW0iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAibWVudS0iICsgaXRlbS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJwYXJlbnQtaXRlbSI6IGl0ZW0gfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgOiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAibWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICJtZW51LSIgKyBpdGVtLmNoaWxkcmVuWzBdLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBuYW1lOiBfdm0uZ2V0TmFtZU9ySHJlZihpdGVtLCB0cnVlKSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiY29tbW9uLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6IGl0ZW0uY2hpbGRyZW5bMF0uaWNvbiB8fCAiIiB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5zaG93VGl0bGUoaXRlbS5jaGlsZHJlblswXSkpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICA6IFsKICAgICAgICAgICAgICAgICAgICBfdm0uc2hvd0NoaWxkcmVuKGl0ZW0pCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJzaWRlLW1lbnUtaXRlbSIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICJtZW51LSIgKyBpdGVtLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgInBhcmVudC1pdGVtIjogaXRlbSB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICA6IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJtZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogIm1lbnUtIiArIGl0ZW0ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6IF92bS5nZXROYW1lT3JIcmVmKGl0ZW0pIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJjb21tb24taWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogaXRlbS5pY29uIHx8ICIiIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KF92bS5fcyhfdm0uc2hvd1RpdGxlKGl0ZW0pKSldKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDIKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uY29sbGFwc2VkLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJjb2xsYXBzZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogIm1lbnUtY29sbGFwc2VkIiwKICAgICAgICAgIGF0dHJzOiB7IGxpc3Q6IF92bS5tZW51TGlzdCB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfdm0uX2woX3ZtLm1lbnVMaXN0LCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgIGl0ZW0uY2hpbGRyZW4gJiYgaXRlbS5jaGlsZHJlbi5sZW5ndGggPiAxCiAgICAgICAgICAgICAgICA/IF9jKCJjb2xsYXBzZWQtbWVudSIsIHsKICAgICAgICAgICAgICAgICAgICBrZXk6ICJkcm9wLW1lbnUtIiArIGluZGV4LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiaGlkZS10aXRsZSI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgInJvb3QtaWNvbi1zaXplIjogX3ZtLnJvb3RJY29uU2l6ZSwKICAgICAgICAgICAgICAgICAgICAgICJpY29uLXNpemUiOiBfdm0uaWNvblNpemUsCiAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogX3ZtLnRoZW1lLAogICAgICAgICAgICAgICAgICAgICAgInBhcmVudC1pdGVtIjogaXRlbQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsgIm9uLWNsaWNrIjogX3ZtLmhhbmRsZVNlbGVjdCB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICA6IF9jKAogICAgICAgICAgICAgICAgICAgICJUb29sdGlwIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBrZXk6ICJkcm9wLW1lbnUtIiArIGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmZXI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OgogICAgICAgICAgICAgICAgICAgICAgICAgIChpdGVtLm1ldGEgJiYgaXRlbS5tZXRhLnRpdGxlKSB8fAogICAgICAgICAgICAgICAgICAgICAgICAgIChpdGVtLmNoaWxkcmVuICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmNoaWxkcmVuWzBdICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmNoaWxkcmVuWzBdLm1ldGEudGl0bGUpLAogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6ICJyaWdodCIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImRyb3AtbWVudS1hIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogeyB0ZXh0QWxpZ246ICJjZW50ZXIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmhhbmRsZVNlbGVjdChfdm0uZ2V0TmFtZU9ySHJlZihpdGVtLCB0cnVlKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiY29tbW9uLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBfdm0ucm9vdEljb25TaXplLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogX3ZtLnRleHRDb2xvciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmljb24gfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaXRlbS5jaGlsZHJlbiAmJiBpdGVtLmNoaWxkcmVuWzBdLmljb24pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICB9KQogICAgICAgIF0sCiAgICAgICAgMgogICAgICApCiAgICBdLAogICAgMgogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}